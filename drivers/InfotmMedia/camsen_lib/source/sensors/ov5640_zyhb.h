/*------------------------------------------------------------------------------
-- 	Copyright (c) 2009~2014 ShangHai Infotm Ltd all rights reserved. 		  --
-- 				   															  --
-- 	This program is free software; you can redistribute it and/or modify	  --
-- 	it under the terms of the GNU General Public License as published by	  --
-- 	the Free Software Foundation; either version 2 of the License, or		  --
-- 	(at your option) any later version.							              --
--------------------------------------------------------------------------------
--	RCSfile: ov5640_zyhb.h
--
--  Description :
--
--	Author:
--     Arsor Fu   <arsor.fu@infotmic.com.cn>
--
--------------------------------------------------------------------------------
-- Revision History: 
-------------------- 
-- v1.0.1	arsor@2012/08/23: first commit.
--
------------------------------------------------------------------------------*/

#define OV5640_I2C_ADDR                (0x78>>1)

static struct ov5640_regval_list {
	IM_UINT8  reg_high;
	IM_UINT8  reg_low;
	IM_UINT8  value;
};


static struct ov5640_regval_list  ov5640_init_regs[] = {
    {0x31, 0x03, 0x11},
    {0x30, 0x08, 0x82},//reset
    {0xff, 0xff, 0xc8},//delay 200ms
    {0x30, 0x08, 0x42},//power down
    {0x31, 0x03, 0x03},
    {0x30, 0x17, 0xff},
    {0x30, 0x18, 0xff},
    //pll and clock setting
    {0x30, 0x34, 0x1a},
    {0x30, 0x35, 0x11},
    {0x30, 0x36, 0x46},//0x46->30fps
    {0x30, 0x37, 0x13},
    {0x31, 0x08, 0x01},
    {0x38, 0x24, 0x01},

    {0x36, 0x30, 0x36},
    {0x36, 0x31, 0x0e},
    {0x36, 0x32, 0xe2},
    {0x36, 0x33, 0x12},
    {0x36, 0x21, 0xe0},
    {0x37, 0x04, 0xa0},
    {0x37, 0x03, 0x5a},
    {0x37, 0x15, 0x78},
    {0x37, 0x17, 0x01},
    {0x37, 0x0b, 0x60},
    {0x37, 0x05, 0x1a},
    {0x39, 0x05, 0x02},
    {0x39, 0x06, 0x10},
    {0x39, 0x01, 0x0a},
    {0x37, 0x31, 0x12},
    {0x36, 0x00, 0x08},
    {0x36, 0x01, 0x33},
    //{0x30, 0x2d, 0x60},
    {0x36, 0x20, 0x52},
    {0x37, 0x1b, 0x20},
    {0x47, 0x1c, 0x50},
    {0x3a, 0x13, 0x43},
    {0x3a, 0x18, 0x00},
    {0x3a, 0x19, 0xf8},
    {0x36, 0x35, 0x13},
    {0x36, 0x36, 0x03},
    {0x36, 0x34, 0x40},
    {0x36, 0x22, 0x01},
    {0x3c, 0x01, 0x34},
    {0x3c, 0x04, 0x28},
    {0x3c, 0x05, 0x98},
    {0x3c, 0x06, 0x00},
    {0x3c, 0x07, 0x08},
    {0x3c, 0x08, 0x00},
    {0x3c, 0x09, 0x1c},
    {0x3c, 0x0a, 0x9c},
    {0x3c, 0x0b, 0x40},
    {0x38, 0x20, 0x41},//binning
    {0x38, 0x21, 0x07},//binning
    {0x38, 0x14, 0x31},
    {0x38, 0x15, 0x31},
    {0x38, 0x00, 0x00},
    {0x38, 0x01, 0x00},
    {0x38, 0x02, 0x00},
    {0x38, 0x03, 0x04},
    {0x38, 0x04, 0x0a},
    {0x38, 0x05, 0x3f},
    {0x38, 0x06, 0x07},
    {0x38, 0x07, 0x9b},
#if 0//SVGA
    {0x38, 0x08, 0x03},
    {0x38, 0x09, 0x20},
    {0x38, 0x0a, 0x02},
    {0x38, 0x0b, 0x58},
#else
    {0x38, 0x08, 0x02},
    {0x38, 0x09, 0x80},
    {0x38, 0x0a, 0x01},
    {0x38, 0x0b, 0xe0},
#endif
    {0x38, 0x0c, 0x07},
    {0x38, 0x0d, 0x68},
    {0x38, 0x0e, 0x03},
    {0x38, 0x0f, 0xd8},
    {0x38, 0x10, 0x00},
    {0x38, 0x11, 0x10},
    {0x38, 0x12, 0x00},
    {0x38, 0x13, 0x06},
    {0x36, 0x18, 0x00},
    {0x36, 0x12, 0x29},
    {0x37, 0x08, 0x64},
    {0x37, 0x09, 0x52},
    {0x37, 0x0c, 0x03},
    {0x3a, 0x00, 0x78},
    {0x3a, 0x02, 0x03},
    {0x3a, 0x03, 0xd8},
    {0x3a, 0x08, 0x01},
    {0x3a, 0x09, 0x27},
    {0x3a, 0x0a, 0x00},
    {0x3a, 0x0b, 0xf6},
    {0x3a, 0x0e, 0x03},
    {0x3a, 0x0d, 0x04},
    {0x3a, 0x14, 0x03},
    {0x3a, 0x15, 0xd8},
    {0x40, 0x01, 0x02},
    {0x40, 0x04, 0x02},
    {0x30, 0x00, 0x00},
    {0x30, 0x02, 0x1c},
    {0x30, 0x04, 0xff},
    {0x30, 0x06, 0xc3},
    {0x30, 0x0e, 0x58},
    //{0x30, 0x2e, 0x00},
	
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
						//00: 1x   01: 2x  10: 3x  11: 4x

    {0x43, 0x00, 0x30},
    {0x50, 0x1f, 0x00},
    {0x47, 0x13, 0x03},
    {0x44, 0x07, 0x04},
    {0x44, 0x0e, 0x00},
    {0x46, 0x0b, 0x35},
    {0x46, 0x0c, 0x20},
    {0x48, 0x37, 0x22},
    //{0x38, 0x24, 0x02},
    {0x50, 0x00, 0xa7},
    {0x50, 0x01, 0xa3},
	
	{0x47, 0x40, 0x21},//hsync,vsync,clock pol,reference to application note,spec is wrong
									
	//AWB                 
    {0x51, 0x80, 0xff},
    {0x51, 0x81, 0xf2},
    {0x51, 0x82, 0x00},
    {0x51, 0x83, 0x14},
    {0x51, 0x84, 0x25},
    {0x51, 0x85, 0x24},
    {0x51, 0x86, 0x09},
    {0x51, 0x87, 0x09},
    {0x51, 0x88, 0x16},
    {0x51, 0x89, 0x8e},
    {0x51, 0x8a, 0x56},
    {0x51, 0x8b, 0xe0},
    {0x51, 0x8c, 0xb2},
    {0x51, 0x8d, 0x28},
    {0x51, 0x8e, 0x1d},
    {0x51, 0x8f, 0x56},
    {0x51, 0x90, 0x46},
    {0x51, 0x91, 0xf8},
    {0x51, 0x92, 0x04},
    {0x51, 0x93, 0x70},
    {0x51, 0x94, 0xf0},
    {0x51, 0x95, 0xf0},
    {0x51, 0x96, 0x03},
    {0x51, 0x97, 0x01},
    {0x51, 0x98, 0x05},
    {0x51, 0x99, 0x7c},
    {0x51, 0x9a, 0x04},
    {0x51, 0x9b, 0x00},
    {0x51, 0x9c, 0x06},
    {0x51, 0x9d, 0x79},
    {0x51, 0x9e, 0x38},
    //color
    {0x53, 0x81, 0x1e},
    {0x53, 0x82, 0x5b},
    {0x53, 0x83, 0x08},
    {0x53, 0x84, 0x05},
    {0x53, 0x85, 0x72},
    {0x53, 0x86, 0x77},
    {0x53, 0x87, 0x6d},
    {0x53, 0x88, 0x4d},
    {0x53, 0x89, 0x20},
    {0x53, 0x8a, 0x01},
    {0x53, 0x8b, 0x98},
    //Sharpness/Denoise
    {0x53, 0x00, 0x08},
    {0x53, 0x01, 0x30},
    {0x53, 0x02, 0x2c},
    {0x53, 0x03, 0x1c},
    {0x53, 0x04, 0x08},
    {0x53, 0x05, 0x30},
    {0x53, 0x06, 0x1c},
    {0x53, 0x07, 0x2c},
    {0x53, 0x09, 0x08},
    {0x53, 0x0a, 0x30},
    {0x53, 0x0b, 0x04},
    {0x53, 0x0c, 0x06},

    //Gamma
    {0x54, 0x80, 0x01},
    {0x54, 0x81, 0x06},
    {0x54, 0x82, 0x0e},
    {0x54, 0x83, 0x19},
    {0x54, 0x84, 0x3b},
    {0x54, 0x85, 0x50},
    {0x54, 0x86, 0x5d},
    {0x54, 0x87, 0x6a},
    {0x54, 0x88, 0x75},
    {0x54, 0x89, 0x80},
    {0x54, 0x8a, 0x8a},
    {0x54, 0x8b, 0x9b},
    {0x54, 0x8c, 0xaa},
    {0x54, 0x8d, 0xc0},
    {0x54, 0x8e, 0xd5},
    {0x54, 0x8f, 0xe8},
    {0x54, 0x90, 0x20},


    //UV
    {0x55, 0x80, 0x04},
    {0x55, 0x83, 0x40},
    {0x55, 0x84, 0x10},
    {0x55, 0x89, 0x10},
    {0x55, 0x8a, 0x00},
    {0x55, 0x8b, 0xf8},

//	{{0x55,0x87},{0x05}},
//	{{0x55,0x88},{0x09}},
	//Lens Shading 
    {0x58, 0x00, 0xa7},
    {0x58, 0x00, 0x17},
    {0x58, 0x01, 0x10},
    {0x58, 0x02, 0x0e},
    {0x58, 0x03, 0x0e},
    {0x58, 0x04, 0x11},
    {0x58, 0x05, 0x1b},
    {0x58, 0x06, 0x0b},
    {0x58, 0x07, 0x07},
    {0x58, 0x08, 0x05},
    {0x58, 0x09, 0x06},
    {0x58, 0x0a, 0x09},
    {0x58, 0x0b, 0x0e},
    {0x58, 0x0c, 0x06},
    {0x58, 0x0d, 0x02},
    {0x58, 0x0e, 0x00},
    {0x58, 0x0f, 0x00},
    {0x58, 0x10, 0x03},
    {0x58, 0x11, 0x09},
    {0x58, 0x12, 0x06},
    {0x58, 0x13, 0x03},
    {0x58, 0x14, 0x00},
    {0x58, 0x15, 0x00},
    {0x58, 0x16, 0x03},
    {0x58, 0x17, 0x09},
    {0x58, 0x18, 0x0b},
    {0x58, 0x19, 0x08},
    {0x58, 0x1a, 0x05},
    {0x58, 0x1b, 0x05},
    {0x58, 0x1c, 0x08},
    {0x58, 0x1d, 0x0e},
    {0x58, 0x1e, 0x18},
    {0x58, 0x1f, 0x12},
    {0x58, 0x20, 0x0f},
    {0x58, 0x21, 0x0f},
    {0x58, 0x22, 0x12},
    {0x58, 0x23, 0x1a},
    {0x58, 0x24, 0x0a},
    {0x58, 0x25, 0x0a},
    {0x58, 0x26, 0x0a},
    {0x58, 0x27, 0x0a},
    {0x58, 0x28, 0x46},
    {0x58, 0x29, 0x2a},
    {0x58, 0x2a, 0x24},
    {0x58, 0x2b, 0x44},
    {0x58, 0x2c, 0x24},
    {0x58, 0x2d, 0x28},
    {0x58, 0x2e, 0x08},
    {0x58, 0x2f, 0x42},
    {0x58, 0x30, 0x40},
    {0x58, 0x31, 0x42},
    {0x58, 0x32, 0x28},
    {0x58, 0x33, 0x0a},
    {0x58, 0x34, 0x26},
    {0x58, 0x35, 0x24},
    {0x58, 0x36, 0x26},
    {0x58, 0x37, 0x28},
    {0x58, 0x38, 0x4a},
    {0x58, 0x39, 0x0a},
    {0x58, 0x3a, 0x0c},
    {0x58, 0x3b, 0x2a},
    {0x58, 0x3c, 0x28},
    {0x58, 0x3d, 0xce},

    //{0x50, 0x25, 0x00},
    
    //EV
    {0x3a, 0x0f, 0x40},
    {0x3a, 0x10, 0x38},
    {0x3a, 0x1b, 0x40},
    {0x3a, 0x1e, 0x38},
    {0x3a, 0x11, 0x70},
    {0x3a, 0x1f, 0x14},

    //power down release
    {0x30, 0x08, 0x02},
};

//for capture
static struct ov5640_regval_list ov5640_qsxga_regs[] = { //qsxga: 2592*1936
	//capture 5Mega 5fps
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting
	{0x30, 0x34, 0x1a},                            	    
	{0x30, 0x35, 0x21},                            	    
	{0x30, 0x36, 0x46},                            	    
	{0x30, 0x37, 0x13},                            	    
	{0x31, 0x08, 0x01},                            	    
	{0x38, 0x24, 0x01},                            	    
	{0xff, 0xff, 0x32},//delay 50ms,//delay 100ms                   
	//timing                                              
	//2592*1936                                           
	{0x38, 0x08, 0x0a}, //H size MSB                    
	{0x38, 0x09, 0x20}, //H size LSB                    
	{0x38, 0x0a, 0x07}, //V size MSB                    
	{0x38, 0x0b, 0x90}, //V size LSB                    
	{0x38, 0x0c, 0x0b}, //HTS MSB                       
	{0x38, 0x0d, 0x1c}, //HTS LSB                       
	{0x38, 0x0e, 0x07}, //VTS MSB                       
	{0x38, 0x0f, 0xb0}, //LSB                           
	//banding step                                        
	{0x3a, 0x08, 0x00}, //50HZ step MSB                 
	{0x3a, 0x09, 0x62}, //50HZ step LSB                 
	{0x3a, 0x0a, 0x00}, //60HZ step MSB                 
	{0x3a, 0x0b, 0x52}, //60HZ step LSB                 
	{0x3a, 0x0e, 0x14}, //50HZ step max                 
	{0x3a, 0x0d, 0x18}, //60HZ step max                 
    {0x35, 0x03, 0x07}, //AEC disable
    {0x35, 0x0c, 0x00},                                   
	{0x35, 0x0d, 0x00},         
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold

    {0x38, 0x14, 0x11}, //horizton subsample
	{0x38, 0x15, 0x11}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0x00}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9f}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte 
  
    {0x53, 0x08, 0x65},		//sharpen manual    
    {0x53, 0x02, 0x20}, //sharpness      
                                                   
    {0x40, 0x02, 0xc5},  //BLC related                  
	{0x40, 0x05, 0x1a}, // BLC related               

	{0x36, 0x18, 0x04},                                 
	{0x36, 0x12, 0x2b},                                 
	{0x37, 0x09, 0x12},                                 
	{0x37, 0x0c, 0x00},                                 
	{0x3a, 0x02, 0x07}, //60HZ max exposure limit MSB   
	{0x3a, 0x03, 0xb0}, //60HZ max exposure limit LSB   
	{0x3a, 0x14, 0x07}, //50HZ max exposure limit MSB   
	{0x3a, 0x15, 0xb0}, //50HZ max exposure limit LSB   
	{0x40, 0x04, 0x06}, //BLC line number               
	{0x48, 0x37, 0x2c},//PCLK period                    
	{0x50, 0x01, 0xa3},//ISP effect    
	
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
		     	 		//00: 1x   01: 2x  10: 3x  11: 4x 	   
		     	 			
	//power down release
	{0x30, 0x08, 0x02}, 
	{0xff, 0xff, 0x32},//delay 50ms             
};

static struct ov5640_regval_list ov5640_qxga_regs[] = { //qxga: 2048*1536
	//capture 3Mega 5fps
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting
	{0x30, 0x34, 0x1a},                            	 
	{0x30, 0x35, 0x21},                            	 
	{0x30, 0x36, 0x46},                            	 
	{0x30, 0x37, 0x13},                            	 
	{0x31, 0x08, 0x01},                            	 
	{0x38, 0x24, 0x01},                            	 
	{0xff, 0xff, 0x32},//delay 50ms,//delay 100ms                
	//timing                                            
	//2048*1536                                         
	{0x38, 0x08, 0x08}, //H size MSB                 
	{0x38, 0x09, 0x00}, //H size LSB                 
	{0x38, 0x0a, 0x06}, //V size MSB                 
	{0x38, 0x0b, 0x00}, //V size LSB                 
	{0x38, 0x0c, 0x0b}, //HTS MSB                    
	{0x38, 0x0d, 0x1c}, //HTS LSB                    
	{0x38, 0x0e, 0x07}, //VTS MSB                    
	{0x38, 0x0f, 0xb0}, //LSB                        
	//banding step                                     
	{0x3a, 0x08, 0x00}, //50HZ step MSB              
	{0x3a, 0x09, 0x62}, //50HZ step LSB              
	{0x3a, 0x0a, 0x00}, //60HZ step MSB              
	{0x3a, 0x0b, 0x52}, //60HZ step LSB              
	{0x3a, 0x0e, 0x14}, //50HZ step max              
	{0x3a, 0x0d, 0x18}, //60HZ step max              
	                                                 
	{0x35, 0x03, 0x07}, //AEC disable
	{0x35, 0x0c, 0x00},                              
	{0x35, 0x0d, 0x00},                              
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold   
                                                   
	{0x38, 0x14, 0x11}, //horizton subsample
	{0x38, 0x15, 0x11}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0x00}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9f}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte 
	
	{0x53, 0x08, 0x65},	//sharpen manual
    {0x53, 0x02, 0x20}, //sharpness                    
	                                   
    {0x40, 0x02, 0xc5},  //BLC related               
	{0x40, 0x05, 0x1a}, // BLC related                              
	                                                                           
	{0x36, 0x18, 0x04},                              
	{0x36, 0x12, 0x2b},                              
	{0x37, 0x09, 0x12},                              
	{0x37, 0x0c, 0x00}, 
	{0x3a, 0x02, 0x07}, //60HZ max exposure limit MSB
	{0x3a, 0x03, 0xb0}, //60HZ max exposure limit LSB
	{0x3a, 0x14, 0x07}, //50HZ max exposure limit MSB
	{0x3a, 0x15, 0xb0}, //50HZ max exposure limit LSB
	{0x40, 0x04, 0x06}, //BLC line number
	{0x48, 0x37, 0x2c},//PCLK period                              
	{0x50, 0x01, 0xa3},//ISP effect  
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x   
	//power  down  release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms              
};                                    

static struct ov5640_regval_list ov5640_uxga_regs[] = { //UXGA: 1600*1200
	//capture 2Mega 5fps
	//power  down
	{0x30, 0x08, 0x42},
	//pll and clock setting
    {0x30, 0x34, 0x1a},
    {0x30, 0x35, 0x21},
    {0x30, 0x36, 0x46},
    {0x30, 0x37, 0x13},
    {0x31, 0x08, 0x01}, 
    {0x38, 0x24, 0x01},
    {0xff, 0xff, 0xc8},//delay 200ms,//delay 100ms
	//timing
    //1600* 1200
    {0x38, 0x08, 0x06}, //H size MSB
	{0x38, 0x09, 0x40}, //H size LSB
	{0x38, 0x0a, 0x04}, //V size MSB
	{0x38, 0x0b, 0xb0}, //V size LSB
	{0x38, 0x0c, 0x0b}, //HTS MSB
	{0x38, 0x0d, 0x1c}, //HTS LSB
	{0x38, 0x0e, 0x07}, //VTS MSB
	{0x38, 0x0f, 0xb0}, //LSB
	//banding step
	{0x3a, 0x08, 0x00}, //50HZ step MSB
	{0x3a, 0x09, 0x62}, //50HZ step LSB
	{0x3a, 0x0a, 0x00}, //60HZ step MSB
	{0x3a, 0x0b, 0x52}, //60HZ step LSB
	{0x3a, 0x0e, 0x14}, //50HZ step max
	{0x3a, 0x0d, 0x18}, //60HZ step max

	{0x35, 0x03, 0x07}, //AEC disable
    {0x35, 0x0c, 0x00}, 
	{0x35, 0x0d, 0x00},
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold

    {0x38, 0x14, 0x11}, //horizton subsample
	{0x38, 0x15, 0x11}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0x00}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9f}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte 
    
    {0x40, 0x02, 0xc5}, //BLC related
	{0x40, 0x05, 0x12}, //BLC related
    {0x53, 0x08, 0x65},	//sharpen manual
    {0x53, 0x02, 0x20}, //sharpness
	
	{0x36, 0x18, 0x04},
	{0x36, 0x12, 0x2b},
	{0x37, 0x09, 0x12},
	{0x37, 0x0c, 0x00},
	{0x3a, 0x02, 0x07},//60HZ max exposure limit MSB
	{0x3a, 0x03, 0xb0},//60HZ max exposure limit LSB
	{0x3a, 0x14, 0x07},//50HZ max exposure limit MSB
	{0x3a, 0x15, 0xb0},//50HZ max exposure limit LSB 
	{0x40, 0x04, 0x06},//BLC line number
	{0x48, 0x37, 0x2c}, //PCLK period                                       
	{0x50, 0x01, 0xa3}, //ISP effect  
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability //00 1x   01: 2x  10: 3x  11: 4x
	//power down  release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms
};

static struct ov5640_regval_list ov5640_sxga_regs[] = { //SXGA: 1280*960
	//capture 1.3 Mega 5fps
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting                                      								                              
	{0x30, 0x34, 0x1a},                                       	              
	{0x30, 0x35, 0x21},                                       	              
	{0x30, 0x36, 0x46},                                       	              
	{0x30, 0x37, 0x13},                                       	              
	{0x31, 0x08, 0x01},                                       	              
	{0x38, 0x24, 0x01},                                       	              
	{0xff, 0xff, 0x32},//delay 50ms,//delay 100ms
	//timing
	//1280*960
	{0x38, 0x08, 0x05}, //H size MSB
	{0x38, 0x09, 0x00}, //H size LSB
	{0x38, 0x0a, 0x03}, //V size MSB
	{0x38, 0x0b, 0xc0}, //V size LSB
	{0x38, 0x0c, 0x0b}, //HTS MSB
	{0x38, 0x0d, 0x1c}, //HTS LSB
	{0x38, 0x0e, 0x07}, //VTS MSB
	{0x38, 0x0f, 0xb0}, //LSB
	//banding step
	{0x3a, 0x08, 0x00}, //50HZ step MSB
	{0x3a, 0x09, 0x62}, //50HZ step LSB
	{0x3a, 0x0a, 0x00}, //60HZ step MSB
	{0x3a, 0x0b, 0x52}, //60HZ step LSB
	{0x3a, 0x0e, 0x14}, //50HZ step max
	{0x3a, 0x0d, 0x18}, //60HZ step max
	
	{0x35, 0x03, 0x07}, //AEC disable
	{0x35, 0x0c, 0x00}, 
	{0x35, 0x0d, 0x00},                                                                                     
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold
    
    {0x38, 0x14, 0x11}, //horizton subsample
	{0x38, 0x15, 0x11}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0x00}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9f}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte
    
    {0x40, 0x02, 0xc5}, //BLC related
	{0x40, 0x05, 0x12}, //BLC related
    {0x53, 0x08, 0x65},	//sharpen manual
    {0x53, 0x02, 0x20},//sharpness
	
	{0x36, 0x18, 0x04},
	{0x36, 0x12, 0x2b},
	{0x37, 0x09, 0x12},
	{0x37, 0x0c, 0x00},
	{0x3a, 0x02, 0x07}, //60HZ max exposure limit MSB
	{0x3a, 0x03, 0xb0}, //60HZ max exposure limit LSB
	{0x3a, 0x14, 0x07}, //50HZ max exposure limit MSB
	{0x3a, 0x15, 0xb0}, //50HZ max exposure limit LSB
	{0x40, 0x04, 0x06}, //BLC line number
                                                             	             
	{0x48, 0x37, 0x2c}, //PCLK period
	{0x50, 0x01, 0xa3}, //ISP effect   
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x   
	//power down release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms
};

static struct ov5640_regval_list ov5640_xvga_regs[] = { //XVGA: 1024*768
	//capture 1Mega 5fps
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting
	{0x30, 0x34, 0x1a},
	{0x30, 0x35, 0x21},
	{0x30, 0x36, 0x46},
	{0x30, 0x37, 0x13},
	{0x31, 0x08, 0x01},
	{0x38, 0x24, 0x01},
	{0xff, 0xff, 0x32},//delay 50ms,//delay 100ms
	//timing
	//1024*768
	{0x38, 0x08, 0x04}, //H size MSB
	{0x38, 0x09, 0x00}, //H size LSB
	{0x38, 0x0a, 0x03}, //V size MSB
	{0x38, 0x0b, 0x00}, //V size LSB
	{0x38, 0x0c, 0x0b}, //HTS MSB    
	{0x38, 0x0d, 0x1c}, //HTS LSB     
	{0x38, 0x0e, 0x07}, //VTS MSB    
	{0x38, 0x0f, 0xb0}, //LSB
	//banding step 
	{0x3a, 0x08, 0x00},//50HZ step MSB
	{0x3a, 0x09, 0x62},//50HZ step LSB
	{0x3a, 0x0a, 0x00},//60HZ step MSB
	{0x3a, 0x0b, 0x52},//60HZ step LSB
	{0x3a, 0x0e, 0x14},//50HZ step max
	{0x3a, 0x0d, 0x18},//60HZ step max
	
	{0x35, 0x03, 0x07}, //AEC disable                 											                    	                                  
	{0x35, 0x0c, 0x00},                              
	{0x35, 0x0d, 0x00},                              
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold   
                                       	           	

	{0x38, 0x14, 0x11}, //horizton subsample
	{0x38, 0x15, 0x11}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0x00}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9f}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte
	
	{0x53, 0x08, 0x65},		//sharpen manual
	{0x53, 0x02, 0x20},		//sharpen offset 1
	{0x40, 0x02, 0xc5},		//BLC related
	{0x40, 0x05, 0x12},		//BLC related
	  
	{0x36, 0x18, 0x00},      
	{0x36, 0x12, 0x29},      
	{0x37, 0x09, 0x52},      
	{0x37, 0x0c, 0x03},      
	{0x3a, 0x02, 0x03},  //60HZ max exposure limit MSB 
	{0x3a, 0x03, 0xd8},  //60HZ max exposure limit LSB     
	{0x3a, 0x14, 0x03},  //50HZ max exposure limit MSB     
	{0x3a, 0x15, 0xd8},  //50HZ max exposure limit LSB     
	{0x40, 0x04, 0x02},  //BLC line number    
	
	{0x48, 0x37, 0x22},  //PCLK period    
	{0x50, 0x01, 0xa3},  //ISP effect
	 
	{0x36, 0x18, 0x04},                  	           
	{0x36, 0x12, 0x2b},                  	           
	{0x37, 0x09, 0x12},                  	           
	{0x37, 0x0c, 0x00},                  	           
	{0x3a, 0x02, 0x07}, //60HZ max exposure limit MSB
	{0x3a, 0x03, 0xb0}, //60HZ max exposure limit LSB
	{0x3a, 0x14, 0x07}, //50HZ max exposure limit MSB
	{0x3a, 0x15, 0xb0}, //50HZ max exposure limit LSB
	{0x40, 0x04, 0x06}, //BLC line number            
	{0x48, 0x37, 0x2c}, //PCLK period 
	{0x50, 0x01, 0xa3}, //ISP effect
	
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x 
	//power down release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms
};

//forvideo 
static struct ov5640_regval_list ov5640_1080p_regs[] = { //1080: 1920*1080 
	//power  down
	{0x30, 0x08, 0x42},
	//pll and clock setting
	{0x30, 0x34, 0x1a},
	{0x30, 0x35, 0x11},	//0x11:30fps 0x21:15fps
	{0x30, 0x36, 0x69},
	{0x30, 0x37, 0x13},
	{0x31, 0x08, 0x01},
	{0x38, 0x24, 0x01},
	{0xff, 0xff, 0x32},//delay 50ms,//delay 100ms
	//timing
	//1920x1080
	{0x38, 0x08, 0x07},	//H size MSB
	{0x38, 0x09, 0x80},	//H size LSB
	{0x38, 0x0a, 0x04},	//V size MSB
	{0x38, 0x0b, 0x38},	//V size LSB
	{0x38, 0x0c, 0x09},	//HTS MSB        
	{0x38, 0x0d, 0xc4},	//HTS LSB   
	{0x38, 0x0e, 0x04},	//VTS MSB        
	{0x38, 0x0f, 0x60},	//VTS LSB       
	//banding step 
	{0x3a, 0x08, 0x01}, //50HZ step MSB 
	{0x3a, 0x09, 0x50}, //50HZ step LSB 
	{0x3a, 0x0a, 0x01}, //60HZ step MSB 
	{0x3a, 0x0b, 0x18}, //60HZ step LSB 
	{0x3a, 0x0e, 0x03}, //50HZ step max 
	{0x3a, 0x0d, 0x04}, //60HZ step max 
	
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold   
	{0x38, 0x14, 0x11}, //horizton subsample
	{0x38, 0x15, 0x11}, //vertical subsample
	{0x38, 0x00, 0x01}, //x address start high byte
	{0x38, 0x01, 0x50}, //x address start low byte  
	{0x38, 0x02, 0x01},	//y address start high byte 
	{0x38, 0x03, 0xb2}, //y address start low byte 
	{0x38, 0x04, 0x08}, //x address end high byte
	{0x38, 0x05, 0xef}, //x address end low byte 
	{0x38, 0x06, 0x05}, //y address end high byte
	{0x38, 0x07, 0xf1}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte
	
	{0x53, 0x08, 0x65},		//sharpen manual
	{0x53, 0x02, 0x00},		//sharpen offset 1
	{0x40, 0x02, 0x45},		//BLC related
	{0x40, 0x05, 0x18},		//BLC related
	
	{0x36, 0x18, 0x04},
	{0x36, 0x12, 0x2b},
	{0x37, 0x09, 0x12},
	{0x37, 0x0c, 0x00},
	{0x3a, 0x02, 0x04}, //60HZ max exposure limit MSB 
	{0x3a, 0x03, 0x60}, //60HZ max exposure limit LSB 
	{0x3a, 0x14, 0x04}, //50HZ max exposure limit MSB 
	{0x3a, 0x15, 0x60}, //50HZ max exposure limit LSB 
	
	{0x40, 0x04, 0x06}, //BLC line number
	{0x30, 0x02, 0x1c}, //reset JFIFO SFIFO JPG
	{0x30, 0x06, 0xc3}, //enable xx clock
	{0x46, 0x0b, 0x37},	//debug mode
	{0x46, 0x0c, 0x20}, //PCLK Manuale
	{0x48, 0x37, 0x16}, //PCLK period
	{0x50, 0x01, 0x83}, //ISP effect
	{0x35, 0x03, 0x00},//AEC enable
	
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x 
	//power down  release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms
};

static struct ov5640_regval_list ov5640_720p_regs[] = { //1280*720
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting
	{0x30, 0x34, 0x1a},
	{0x30, 0x35, 0x21},	//0x11:60fps 0x21:30fps 0x41:15fps
	{0x30, 0x36, 0x69},
	{0x30, 0x37, 0x13},
	{0x31, 0x08, 0x01},
	{0x38, 0x24, 0x01},
	{0xff, 0xff, 0x32},//delay 50ms,//delay 100ms
	//timing
	//1280x720
	{0x38, 0x08, 0x05},	//H size MSB
	{0x38, 0x09, 0x00},	//H size LSB
	{0x38, 0x0a, 0x02},	//V size MSB
	{0x38, 0x0b, 0xd0},	//V size LSB
	{0x38, 0x0c, 0x07},	//HTS MSB        
	{0x38, 0x0d, 0x64},	//HTS LSB   
	{0x38, 0x0e, 0x02},	//VTS MSB        
	{0x38, 0x0f, 0xe4},	//LSB       
	//banding step
	{0x3a, 0x08, 0x00}, //50HZ step MSB 
	{0x3a, 0x09, 0xdd}, //50HZ step LSB 
	{0x3a, 0x0a, 0x00}, //60HZ step MSB 
	{0x3a, 0x0b, 0xb8}, //60HZ step LSB 
	{0x3a, 0x0e, 0x03}, //50HZ step max 
	{0x3a, 0x0d, 0x04}, //60HZ step max 
	
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold   
	{0x38, 0x14, 0x31}, //horizton subsample
	{0x38, 0x15, 0x31}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0xfa}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x06}, //y address end high byte
	{0x38, 0x07, 0xa9}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte
	
	{0x53, 0x08, 0x65},		//sharpen manual
	{0x53, 0x02, 0x00},		//sharpen offset 1
	{0x40, 0x02, 0x45},		//BLC related
	{0x40, 0x05, 0x18},		//BLC related
	
	{0x36, 0x18, 0x00},
	{0x36, 0x12, 0x29},
	{0x37, 0x09, 0x52},
	{0x37, 0x0c, 0x03},
	{0x3a, 0x02, 0x02}, //60HZ max exposure limit MSB 
	{0x3a, 0x03, 0xe0}, //60HZ max exposure limit LSB 
	{0x3a, 0x14, 0x02}, //50HZ max exposure limit MSB 
	{0x3a, 0x15, 0xe0}, //50HZ max exposure limit LSB 
	
	{0x40, 0x04, 0x02}, //BLC line number
	{0x30, 0x02, 0x1c}, //reset JFIFO SFIFO JPG
	{0x30, 0x06, 0xc3}, //enable xx clock
	{0x46, 0x0b, 0x37},	//debug mode
	{0x46, 0x0c, 0x20}, //PCLK Manuale
	{0x48, 0x37, 0x16}, //PCLK period
	{0x50, 0x01, 0x83}, //ISP effect
	{0x35, 0x03, 0x00},//AEC enable
	
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x 
	//power down release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms
};

static struct ov5640_regval_list ov5640_svga_regs[] = { //SVGA: 800*600
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting
	{0x30, 0x34, 0x1a},                
	{0x30, 0x35, 0x11},                
	{0x30, 0x36, 0x46},                
	{0x30, 0x37, 0x13},                
	{0x31, 0x08, 0x01},                
	{0x38, 0x24, 0x01},                
	{0xff, 0xff, 0x32},//delay 50ms,//delay 100ms  
	//timing                           
	//800x600                          
	{0x38, 0x08, 0x3 }, //H size MSB   
	{0x38, 0x09, 0x20}, //H size LSB   
	{0x38, 0x0a, 0x2 }, //V size MSB   
	{0x38, 0x0b, 0x58}, //V size LSB   
	{0x38, 0x0c, 0x07}, //HTS MSB      
	{0x38, 0x0d, 0x68}, //HTS LSB      
	{0x38, 0x0e, 0x03}, //VTS MSB      
	{0x38, 0x0f, 0xd8}, //LSB          
	//banding step          
	{0x3a, 0x08, 0x01},//50HZ step MSB 
	{0x3a, 0x09, 0x27},//50HZ step LSB 
	{0x3a, 0x0a, 0x00},//60HZ step MSB 
	{0x3a, 0x0b, 0xf6},//60HZ step LSB 
	{0x3a, 0x0e, 0x03},//50HZ step max 
	{0x3a, 0x0d, 0x04},//60HZ step max 
	
	{0x35, 0x03, 0x00},  //AEC enable
	{0x3c, 0x07, 0x08},   //light meter 1 thereshold   
  
	{0x38, 0x14, 0x31}, //horizton subsample
	{0x38, 0x15, 0x31}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0x04}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9b}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x06},	//isp vertical offset low byte
	
	{0x53, 0x08, 0x65},		//sharpen manual
	{0x53, 0x02, 0x00},		//sharpen offset 1
	{0x40, 0x02, 0x45},		//BLC related
	{0x40, 0x05, 0x18},		//BLC related
	  
	{0x36, 0x18, 0x00},      
	{0x36, 0x12, 0x29},      
	{0x37, 0x09, 0x52},      
	{0x37, 0x0c, 0x03},      
	{0x3a, 0x02, 0x03},  //60HZ max exposure limit MSB 
	{0x3a, 0x03, 0xd8},  //60HZ max exposure limit LSB     
	{0x3a, 0x14, 0x03},  //50HZ max exposure limit MSB     
	{0x3a, 0x15, 0xd8},  //50HZ max exposure limit LSB     
	{0x40, 0x04, 0x02},  //BLC line number    
	
	{0x48, 0x37, 0x22},  //PCLK period    
	{0x50, 0x01, 0xa3},  //ISP effect
	
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x 
	//power down release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms
};

static struct ov5640_regval_list ov5640_vga_regs[] = { //VGA:  640*480
	
	//timing                              
	//640x480    
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting
	{0x30, 0x34, 0x1a},                
	{0x30, 0x35, 0x11},                
	{0x30, 0x36, 0x46},                
	{0x30, 0x37, 0x13},                
	{0x31, 0x08, 0x01},                
	{0x38, 0x24, 0x01},                
	{0xff, 0xff, 0x32}, //delay 50ms 
	                       
	{0x38, 0x08, 0x02}, //H size MSB   
	{0x38, 0x09, 0x80}, //H size LSB   
	{0x38, 0x0a, 0x01}, //V size MSB   
	{0x38, 0x0b, 0xe0}, //V size LSB   
	{0x38, 0x0c, 0x07}, //HTS MSB      
	{0x38, 0x0d, 0x68}, //HTS LSB      
	{0x38, 0x0e, 0x03}, //VTS MSB      
	{0x38, 0x0f, 0xd8}, //LSB          
	//banding step               
	{0x3a, 0x08, 0x01},//50HZ step MSB 
	{0x3a, 0x09, 0x27},//50HZ step LSB 
	{0x3a, 0x0a, 0x00},//60HZ step MSB 
	{0x3a, 0x0b, 0xf6},//60HZ step LSB 
	{0x3a, 0x0e, 0x03},//50HZ step max 
	{0x3a, 0x0d, 0x04},//60HZ step max 
	
	{0x36, 0x18, 0x00},      
	{0x36, 0x12, 0x29},      
	{0x37, 0x09, 0x52},      
	{0x37, 0x0c, 0x03},      
	{0x3a, 0x02, 0x03},  //60HZ max exposure limit MSB 
	{0x3a, 0x03, 0xd8},  //60HZ max exposure limit LSB     
	{0x3a, 0x14, 0x03},  //50HZ max exposure limit MSB     
	{0x3a, 0x15, 0xd8},  //50HZ max exposure limit LSB     
	{0x40, 0x04, 0x02},  //BLC line number 
	
	{0x35, 0x03, 0x00},  //AEC eanble
	{0x3c, 0x07, 0x08}, //light meter 1 thereshold   
  
	{0x38, 0x14, 0x31}, //horizton subsample
	{0x38, 0x15, 0x31}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00}, //y address start high byte 
	{0x38, 0x03, 0x04}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9b}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x06}, //isp vertical offset low byte
	
	{0x53, 0x08, 0x65},		//sharpen manual
	{0x53, 0x02, 0x00},		//sharpen offset 1
	{0x40, 0x02, 0x45},		//BLC related
	{0x40, 0x05, 0x18},		//BLC related
	  
   
	
	{0x48, 0x37, 0x22},  //PCLK period    
	{0x50, 0x01, 0xa3},  //ISP effect
	
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x 
	//power down release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms
};


/*
 * The white balance settings
 * Here only tune the R G B channel gain. 
 * The white balance enalbe bit is modified in sensor_s_autowb and sensor_s_wb
 */
static struct ov5640_regval_list ov5640_auto_regs[] = {
	//simple awb
//	{0x34, 0x06, 0x00},
//	{0x51, 0x83, 0x94},
//	{0x51, 0x91, 0xff},
//	{0x51, 0x92, 0x00},

    //advanced  awb
	{0x34, 0x06, 0x00},
	{0x51, 0x92, 0x04},
	{0x51, 0x91, 0xf8},
	{0x51, 0x93, 0x70},
	{0x51, 0x94, 0xf0},
	{0x51, 0x95, 0xf0},
	{0x51, 0x8d, 0x3d},
	{0x51, 0x8f, 0x54},
	{0x51, 0x8e, 0x3d},
	{0x51, 0x90, 0x54},
	{0x51, 0x8b, 0xa8},
	{0x51, 0x8c, 0xa8},
	{0x51, 0x87, 0x18},
	{0x51, 0x88, 0x18},
	{0x51, 0x89, 0x6e},
	{0x51, 0x8a, 0x68},
	{0x51, 0x86, 0x1c},
	{0x51, 0x81, 0x50},
	{0x51, 0x84, 0x25},
	{0x51, 0x82, 0x11},
	{0x51, 0x83, 0x14},
	{0x51, 0x84, 0x25},
	{0x51, 0x85, 0x24},
};

static struct ov5640_regval_list ov5640_sunny_regs[] = {
	//tai yang guang
	{0x34, 0x06, 0x01},
	{0x34, 0x00, 0x06},
	{0x34, 0x01, 0x1c},
	{0x34, 0x02, 0x04},
	{0x34, 0x03, 0x00},
	{0x34, 0x04, 0x04},
	{0x34, 0x05, 0xf3},
};

static struct ov5640_regval_list ov5640_cloudy_regs[] = {	
	{0x34, 0x06, 0x01},
	{0x34, 0x00, 0x06},
	{0x34, 0x01, 0x48},
	{0x34, 0x02, 0x04},
	{0x34, 0x03, 0x00},
	{0x34, 0x04, 0x04},
	{0x34, 0x05, 0xd3},
};

static struct ov5640_regval_list ov5640_fluorescent_regs[] = {
	//ri guang deng
	{0x34, 0x06, 0x01},
	{0x34, 0x00, 0x05},
	{0x34, 0x01, 0x48},
	{0x34, 0x02, 0x04},
	{0x34, 0x03, 0x00},
	{0x34, 0x04, 0x07},
	{0x34, 0x05, 0xcf},
};

static struct ov5640_regval_list ov5640_incandescence_regs[] = {
	//bai ci deng 
	{0x34, 0x06, 0x01},
	{0x34, 0x00, 0x04},
	{0x34, 0x01, 0x10},
	{0x34, 0x02, 0x04},
	{0x34, 0x03, 0x00},
	{0x34, 0x04, 0x08},
	{0x34, 0x05, 0xb6},
};


/*
 * The special effect settings
 */
static struct ov5640_regval_list ov5640_normal_regs[] = {
	{0x50, 0x01, 0x7f},
	{0x55, 0x80, 0x04},
};

static struct ov5640_regval_list ov5640_bw_regs[] = {
	{0x50, 0x01, 0xff},
	{0x55, 0x80, 0x18},
	{0x55, 0x83, 0x80},
	{0x55, 0x84, 0x80},
};

static struct ov5640_regval_list ov5640_sepia_regs[] = {
	{0x50, 0x01, 0xff},
	{0x55, 0x80, 0x18},
	{0x55, 0x83, 0x40},
	{0x55, 0x84, 0xa0},
};

static struct ov5640_regval_list ov5640_negative_regs[] = {
	{0x50, 0x01, 0xff},
	{0x55, 0x80, 0x40},
};

static struct ov5640_regval_list ov5640_emboss_regs[] = {
	{0x50, 0x01, 0xff},
	{0x55, 0x80, 0x18},
	{0x55, 0x83, 0x80},
	{0x55, 0x84, 0xc0},
};

static struct ov5640_regval_list ov5640_sketch_regs[] = {
	{0x50, 0x01, 0xff},
	{0x55, 0x80, 0x18},
	{0x55, 0x83, 0x80},
	{0x55, 0x84, 0xc0},
};

static struct ov5640_regval_list ov5640_sky_blue_regs[] = {
	{0x50, 0x01, 0xff},
	{0x55, 0x80, 0x18},
	{0x55, 0x83, 0xa0},
	{0x55, 0x84, 0x40},
};

static struct ov5640_regval_list ov5640_grass_green_regs[] = {
	{0x50, 0x01, 0xff},
	{0x55, 0x80, 0x18},
	{0x55, 0x83, 0x60},
	{0x55, 0x84, 0x60},
};

/*
 * The exposure target settings
 */
static struct ov5640_regval_list ov5640_ev_neg4_regs[] = {
	{0x3a, 0x0f, 0x10},	//-1.7EV
	{0x3a, 0x10, 0x08},
	{0x3a, 0x1b, 0x10},
	{0x3a, 0x1e, 0x08},
	{0x3a, 0x11, 0x20},
	{0x3a, 0x1f, 0x10},
};

static struct ov5640_regval_list ov5640_ev_neg3_regs[] = {
	{0x3a, 0x0f, 0x18},	//-1.3EV
	{0x3a, 0x10, 0x10},
	{0x3a, 0x1b, 0x18},
	{0x3a, 0x1e, 0x10},
	{0x3a, 0x11, 0x30},
	{0x3a, 0x1f, 0x10},
};

static struct ov5640_regval_list ov5640_ev_neg2_regs[] = {
	{0x3a, 0x0f, 0x20},	//-1.0EV
	{0x3a, 0x10, 0x18},
	{0x3a, 0x11, 0x41},
	{0x3a, 0x1b, 0x20},
	{0x3a, 0x1e, 0x18},
	{0x3a, 0x1f, 0x10},
};

static struct ov5640_regval_list ov5640_ev_neg1_regs[] = {
	{0x3a, 0x0f, 0x28},	//-0.7EV
	{0x3a, 0x10, 0x20},
	{0x3a, 0x11, 0x51},
	{0x3a, 0x1b, 0x28},
	{0x3a, 0x1e, 0x20},
	{0x3a, 0x1f, 0x10},
};                   

static struct ov5640_regval_list ov5640_ev_zero_regs[] = {
	{0x3a, 0x0f, 0x38},		//default
	{0x3a, 0x10, 0x30},
	{0x3a, 0x11, 0x61},
	{0x3a, 0x1b, 0x38},
	{0x3a, 0x1e, 0x30},
	{0x3a, 0x1f, 0x10},
};

static struct ov5640_regval_list ov5640_ev_pos1_regs[] = {
	{0x3a, 0x0f, 0x48},	//0.7EV
	{0x3a, 0x10, 0x40},
	{0x3a, 0x11, 0x80},
	{0x3a, 0x1b, 0x48},
	{0x3a, 0x1e, 0x40},
	{0x3a, 0x1f, 0x20},
};

static struct ov5640_regval_list ov5640_ev_pos2_regs[] = {
	{0x3a, 0x0f, 0x50},	//1.0EV
	{0x3a, 0x10, 0x48},
	{0x3a, 0x11, 0x90},
	{0x3a, 0x1b, 0x50},
	{0x3a, 0x1e, 0x48},
	{0x3a, 0x1f, 0x20},
};

static struct ov5640_regval_list ov5640_ev_pos3_regs[] = {
	{0x3a, 0x0f, 0x58},	//1.3EV
	{0x3a, 0x10, 0x50},
	{0x3a, 0x11, 0x91},
	{0x3a, 0x1b, 0x58},
	{0x3a, 0x1e, 0x50},
	{0x3a, 0x1f, 0x20},
};

static struct ov5640_regval_list ov5640_ev_pos4_regs[] = {
	{0x3a, 0x0f, 0x60},	//1.7EV
	{0x3a, 0x10, 0x58},
	{0x3a, 0x11, 0xa0},
	{0x3a, 0x1b, 0x60},
	{0x3a, 0x1e, 0x58},
	{0x3a, 0x1f, 0x20},	
};

