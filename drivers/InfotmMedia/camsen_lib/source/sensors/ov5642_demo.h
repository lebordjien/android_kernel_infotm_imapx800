/*------------------------------------------------------------------------------
-- 	Copyright (c) 2009~2014 ShangHai Infotm Ltd all rights reserved. 		  --
-- 				   															  --
-- 	This program is free software; you can redistribute it and/or modify	  --
-- 	it under the terms of the GNU General Public License as published by	  --
-- 	the Free Software Foundation; either version 2 of the License, or		  --
-- 	(at your option) any later version.							              --
--------------------------------------------------------------------------------
--	RCSfile: ov5642_demo.h
--
--  Description :
--
--	Author:
--     Arsor Fu   <arsor.fu@infotmic.com.cn>
--
--------------------------------------------------------------------------------
-- Revision History: 
-------------------- 
-- v1.0.1	arsor@2012/08/23: first commit.
--
------------------------------------------------------------------------------*/

#define OV5642_I2C_ADDR                0x3C

static struct ov5642_regval_list {
	IM_UINT8  reg_high;
	IM_UINT8  reg_low;
	IM_UINT8  value;
};


static struct ov5642_regval_list  ov5642_init_regs[] = {
	{0x31,0x03, 0x93},
    	{0x30,0x08, 0x82},
 	{0x30,0x17, 0x7f},
 	{0x30,0x18, 0xfc},

	{0x30,0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x 
	
 	{0x38,0x10, 0xc0},//c2},
 	{0x36,0x15, 0xf0},
 	{0x30,0x00, 0x00},
 	{0x30,0x01, 0x00},
 	{0x30,0x02, 0x00},
 	{0x30,0x03, 0x00},
 	{0x30,0x00, 0xf8},
 	{0x30,0x01, 0x48},
 	{0x30,0x02, 0x5c},
 	{0x30,0x03, 0x02},
 	{0x30,0x04, 0x07},
 	{0x30,0x05, 0xb7},
 	{0x30,0x06, 0x43},
 	{0x30,0x07, 0x37},
 	{0x30,0x11, 0x08},
 	{0x30,0x10, 0x10},
 	{0x46,0x0c, 0x22},
 	{0x38,0x15, 0x04},
 	{0x37,0x0d, 0x06},
 	{0x37,0x0c, 0xa0},
 	{0x36,0x02, 0xfc},
 	{0x36,0x12, 0xff},
 	{0x36,0x34, 0xc0},
 	{0x36,0x13, 0x00},
 	{0x36,0x05, 0x7c},
 	{0x36,0x21, 0x09},
 	{0x36,0x22, 0x00},
 	{0x36,0x04, 0x40},
 	{0x36,0x03, 0xa7},
 	{0x36,0x03, 0x27},
 	{0x40,0x00, 0x21},
 	{0x40,0x1d, 0x02},
 	{0x36,0x00, 0x54},
 	{0x36,0x05, 0x04},
 	{0x36,0x06, 0x1b},//3f},
 	{0x3c,0x01, 0x80},
 	{0x50,0x20, 0x04},
 	{0x51,0x81, 0x79},
 	{0x51,0x82, 0x00},
 	{0x51,0x85, 0x22},
 	{0x51,0x97, 0x01},
 	{0x50,0x01, 0xff},
 	{0x55,0x00, 0x0a},
 	{0x55,0x04, 0x00},
 	{0x55,0x05, 0x7f},
 	{0x50,0x80, 0x08},
 	{0x30,0x0e, 0x18},
 	{0x46,0x10, 0x00},
 	{0x47,0x1d, 0x05},
 	{0x47,0x08, 0x06},
 	{0x37,0x10, 0x10},
 	{0x36,0x32, 0x41},
 	{0x37,0x02, 0x40},
 	{0x36,0x20, 0x37},
 	{0x36,0x31, 0x01},
 	{0x38,0x08, 0x02},
 	{0x38,0x09, 0x80},
 	{0x38,0x0a, 0x01},
 	{0x38,0x0b, 0xe0},
 	{0x38,0x0e, 0x07},
 	{0x38,0x0f, 0xd0},
 	{0x50,0x1f, 0x00},
 	{0x50,0x00, 0xcf},//4f},
 	{0x43,0x00, 0x30},//YUYV  //32},   //UYVY
 	{0x35,0x03, 0x07},
 	{0x35,0x01, 0x73},
 	{0x35,0x02, 0x80},
 	{0x35,0x0b, 0x00},
 	{0x35,0x03, 0x07},
 	{0x38,0x24, 0x11},
 	{0x35,0x01, 0x1e},
 	{0x35,0x02, 0x80},
 	{0x35,0x0b, 0x7f},
 	{0x38,0x0c, 0x0c},
 	{0x38,0x0d, 0x80},
 	{0x38,0x0e, 0x03},
 	{0x38,0x0f, 0xe8},
 	{0x3a,0x0d, 0x04},
 	{0x3a,0x0e, 0x03},
 	{0x38,0x18, 0xc1},
 	{0x37,0x05, 0xdb},
 	{0x37,0x0a, 0x81},
 	{0x38,0x01, 0x80},
 	{0x36,0x21, 0xc7},
 	{0x38,0x01, 0x50},
 	{0x38,0x03, 0x08},
 	{0x38,0x27, 0x08},
 	{0x38,0x10, 0x40},//c0}, for dark line 
 	{0x38,0x04, 0x05},
 	{0x38,0x05, 0x00},
 	{0x56,0x82, 0x05},
 	{0x56,0x83, 0x00},
 	{0x38,0x06, 0x03},
 	{0x38,0x07, 0xc0},
 	{0x56,0x86, 0x03},
 	{0x56,0x87, 0xc0},
 	{0x3a,0x00, 0x78},
 	{0x3a,0x1a, 0x04},
 	{0x3a,0x13, 0x30},
 	{0x3a,0x18, 0x00},
 	{0x3a,0x19, 0x7c},
 	{0x3a,0x08, 0x12},
 	{0x3a,0x09, 0xc0},
 	{0x3a,0x0a, 0x0f},
 	{0x3a,0x0b, 0xa0},
 	{0x30,0x04, 0xff},
 	{0x35,0x0c, 0x07},
 	{0x35,0x0d, 0xd0},
 	{0x35,0x00, 0x00},
 	{0x35,0x01, 0x00},
 	{0x35,0x02, 0x00},
 	{0x35,0x0a, 0x00},
 	{0x35,0x0b, 0x00},
 	{0x35,0x03, 0x00},
 	{0x52,0x8a, 0x02},
 	{0x52,0x8b, 0x04},
 	{0x52,0x8c, 0x08},
 	{0x52,0x8d, 0x08},
 	{0x52,0x8e, 0x08},
 	{0x52,0x8f, 0x10},
 	{0x52,0x90, 0x10},
 	{0x52,0x92, 0x00},
 	{0x52,0x93, 0x02},
 	{0x52,0x94, 0x00},
 	{0x52,0x95, 0x02},
 	{0x52,0x96, 0x00},
 	{0x52,0x97, 0x02},
 	{0x52,0x98, 0x00},
 	{0x52,0x99, 0x02},
 	{0x52,0x9a, 0x00},
 	{0x52,0x9b, 0x02},
 	{0x52,0x9c, 0x00},
 	{0x52,0x9d, 0x02},
 	{0x52,0x9e, 0x00},
 	{0x52,0x9f, 0x02},
 	{0x3a,0x0f, 0x30},//3c},
 	{0x3a,0x10, 0x28},//30},
 	{0x3a,0x1b, 0x30},//3c},
 	{0x3a,0x1e, 0x28},//30},
 	{0x3a,0x11, 0x61},//70},
 	{0x3a,0x1f, 0x10},
 	{0x30,0x30, 0x0b},
 	{0x3a,0x02, 0x00},
 	{0x3a,0x03, 0x7d},
 	{0x3a,0x04, 0x00},
 	{0x3a,0x14, 0x00},
 	{0x3a,0x15, 0x7d},
 	{0x3a,0x16, 0x00},
 	{0x3a,0x00, 0x78},
 	{0x3a,0x08, 0x09},
 	{0x3a,0x09, 0x60},
 	{0x3a,0x0a, 0x07},
 	{0x3a,0x0b, 0xd0},
 	{0x3a,0x0d, 0x08},
 	{0x3a,0x0e, 0x06},
 	{0x51,0x93, 0x70},
 	{0x36,0x20, 0x57},
 	{0x37,0x03, 0x98},
 	{0x37,0x04, 0x1c},
 	{0x58,0x9b, 0x04},
 	{0x58,0x9a, 0xc5},
 	{0x52,0x8a, 0x00},
 	{0x52,0x8b, 0x02},
 	{0x52,0x8c, 0x08},
 	{0x52,0x8d, 0x10},
 	{0x52,0x8e, 0x20},
 	{0x52,0x8f, 0x28},
 	{0x52,0x90, 0x30},
 	{0x52,0x92, 0x00},
 	{0x52,0x93, 0x00},
 	{0x52,0x94, 0x00},
 	{0x52,0x95, 0x02},
 	{0x52,0x96, 0x00},
 	{0x52,0x97, 0x08},
 	{0x52,0x98, 0x00},
 	{0x52,0x99, 0x10},
 	{0x52,0x9a, 0x00},
 	{0x52,0x9b, 0x20},
 	{0x52,0x9c, 0x00},
 	{0x52,0x9d, 0x28},
 	{0x52,0x9e, 0x00},
 	{0x52,0x9f, 0x30},
 	{0x52,0x82, 0x00},
 	{0x53,0x00, 0x00},
 	{0x53,0x01, 0x20},
 	{0x53,0x02, 0x00},
 	{0x53,0x03, 0x7c},
 	{0x53,0x0c, 0x00},
 	{0x53,0x0d, 0x0c},
 	{0x53,0x0e, 0x20},
 	{0x53,0x0f, 0x80},
 	{0x53,0x10, 0x20},
 	{0x53,0x11, 0x80},
 	{0x53,0x08, 0x20},
 	{0x53,0x09, 0x40},
 	{0x53,0x04, 0x00},
 	{0x53,0x05, 0x30},
 	{0x53,0x06, 0x00},
 	{0x53,0x07, 0x80},
 	{0x53,0x14, 0x08},
 	{0x53,0x15, 0x20},
 	{0x53,0x19, 0x30},
 	{0x53,0x16, 0x10},
 	{0x53,0x17, 0x08},
 	{0x53,0x18, 0x02},
 	{0x53,0x80, 0x01},
 	{0x53,0x81, 0x00},
 	{0x53,0x82, 0x00},
 	{0x53,0x83, 0x4e},
 	{0x53,0x84, 0x00},
 	{0x53,0x85, 0x0f},
 	{0x53,0x86, 0x00},
 	{0x53,0x87, 0x00},
 	{0x53,0x88, 0x01},
 	{0x53,0x89, 0x15},
 	{0x53,0x8a, 0x00},
 	{0x53,0x8b, 0x31},
 	{0x53,0x8c, 0x00},
 	{0x53,0x8d, 0x00},
 	{0x53,0x8e, 0x00},
 	{0x53,0x8f, 0x0f},
 	{0x53,0x90, 0x00},
 	{0x53,0x91, 0xab},
 	{0x53,0x92, 0x00},
 	{0x53,0x93, 0xa2},
 	{0x53,0x94, 0x08},
 	{0x54,0x80, 0x14},
 	{0x54,0x81, 0x21},
 	{0x54,0x82, 0x36},
 	{0x54,0x83, 0x57},
 	{0x54,0x84, 0x65},
 	{0x54,0x85, 0x71},
 	{0x54,0x86, 0x7d},
 	{0x54,0x87, 0x87},
 	{0x54,0x88, 0x91},
 	{0x54,0x89, 0x9a},
 	{0x54,0x8a, 0xaa},
 	{0x54,0x8b, 0xb8},
 	{0x54,0x8c, 0xcd},
 	{0x54,0x8d, 0xdd},
 	{0x54,0x8e, 0xea},
 	{0x54,0x8f, 0x10},
 	{0x54,0x90, 0x05},
 	{0x54,0x91, 0x00},
 	{0x54,0x92, 0x04},
 	{0x54,0x93, 0x20},
 	{0x54,0x94, 0x03},
 	{0x54,0x95, 0x60},
 	{0x54,0x96, 0x02},
 	{0x54,0x97, 0xb8},
 	{0x54,0x98, 0x02},
 	{0x54,0x99, 0x86},
 	{0x54,0x9a, 0x02},
 	{0x54,0x9b, 0x5b},
 	{0x54,0x9c, 0x02},
 	{0x54,0x9d, 0x3b},
 	{0x54,0x9e, 0x02},
 	{0x54,0x9f, 0x1c},
 	{0x54,0xa0, 0x02},
 	{0x54,0xa1, 0x04},
 	{0x54,0xa2, 0x01},
 	{0x54,0xa3, 0xed},
 	{0x54,0xa4, 0x01},
 	{0x54,0xa5, 0xc5},
 	{0x54,0xa6, 0x01},
 	{0x54,0xa7, 0xa5},
 	{0x54,0xa8, 0x01},
 	{0x54,0xa9, 0x6c},
 	{0x54,0xaa, 0x01},
 	{0x54,0xab, 0x41},
 	{0x54,0xac, 0x01},
 	{0x54,0xad, 0x20},
 	{0x54,0xae, 0x00},
 	{0x54,0xaf, 0x16},
 	{0x34,0x06, 0x00},
 	{0x51,0x92, 0x04},
 	{0x51,0x91, 0xf8},
 	{0x51,0x93, 0x70},
 	{0x51,0x94, 0xf0},
 	{0x51,0x95, 0xf0},
 	{0x51,0x8d, 0x3d},
 	{0x51,0x8f, 0x54},
 	{0x51,0x8e, 0x3d},
 	{0x51,0x90, 0x54},
 	{0x51,0x8b, 0xc0},
 	{0x51,0x8c, 0xbd},
 	{0x51,0x87, 0x18},
 	{0x51,0x88, 0x18},
 	{0x51,0x89, 0x6e},
 	{0x51,0x8a, 0x68},
 	{0x51,0x86, 0x1c},
 	{0x51,0x81, 0x50},
 	{0x51,0x84, 0x25},
 	{0x51,0x82, 0x11},
 	{0x51,0x83, 0x14},
 	{0x51,0x84, 0x25},
 	{0x51,0x85, 0x24},
 	{0x50,0x25, 0x82},
 	{0x3a,0x0f, 0x7e},
 	{0x3a,0x10, 0x72},
 	{0x3a,0x1b, 0x80},
 	{0x3a,0x1e, 0x70},
 	{0x3a,0x11, 0xd0},
 	{0x3a,0x1f, 0x40},
 	{0x55,0x83, 0x40},
 	{0x55,0x84, 0x40},
 	{0x55,0x80, 0x02},
 	{0x36,0x33, 0x07},
 	{0x37,0x02, 0x10},
 	{0x37,0x03, 0xb2},
 	{0x37,0x04, 0x18},
 	{0x37,0x0b, 0x40},
 	{0x37,0x0d, 0x02},
 	{0x36,0x20, 0x52},
 	{0x3c,0x00, 0x04},

	{0x50,0x01,0xFF},
	{0x55,0x83,0x50},
	{0x55,0x84,0x50},
	{0x55,0x80,0x02},
	{0x3c,0x01,0x80},
	{0x3c,0x00,0x04},
	/*
	{0x58,0x00,0x27},
	{0x58,0x01,0x22},
	{0x58,0x02,0x1b},
	{0x58,0x03,0x17},
	{0x58,0x04,0x16},
	{0x58,0x05,0x18},
	{0x58,0x06,0x20},
	{0x58,0x07,0x20},
	{0x58,0x08,0x1b},
	{0x58,0x09,0x15},
	{0x58,0x0a,0x0f},
	{0x58,0x0b,0x0d},
	{0x58,0x0c,0x0d},
	{0x58,0x0d,0x0e},
	{0x58,0x0e,0x11},
	{0x58,0x0f,0x18},
	{0x58,0x10,0x10},
	{0x58,0x11,0x0d},
	{0x58,0x12,0x08},
	{0x58,0x13,0x05},
	{0x58,0x14,0x04},
	{0x58,0x15,0x06},
	{0x58,0x16,0x09},
	{0x58,0x17,0x0e},
	{0x58,0x18,0x0d},
	{0x58,0x19,0x09},
	{0x58,0x1a,0x03},
	{0x58,0x1b,0x00},
	{0x58,0x1c,0x00},
	{0x58,0x1d,0x01},
	{0x58,0x1e,0x05},
	{0x58,0x1f,0x0b},
	{0x58,0x20,0x0d},
	{0x58,0x21,0x09},
	{0x58,0x22,0x03},
	{0x58,0x23,0x00},
	{0x58,0x24,0x00},
	{0x58,0x25,0x01},
	{0x58,0x26,0x05},
	{0x58,0x27,0x0b},
	{0x58,0x28,0x10},
	{0x58,0x29,0x0c},
	{0x58,0x2a,0x08},
	{0x58,0x2b,0x04},
	{0x58,0x2c,0x03},
	{0x58,0x2d,0x05},
	{0x58,0x2e,0x09},
	{0x58,0x2f,0x0e},
	{0x58,0x30,0x1b},
	{0x58,0x31,0x14},
	{0x58,0x32,0x0f},
	{0x58,0x33,0x0c},
	{0x58,0x34,0x0c},
	{0x58,0x35,0x0d},
	{0x58,0x36,0x10},
	{0x58,0x37,0x19},
	{0x58,0x38,0x25},
	{0x58,0x39,0x23},
	{0x58,0x3a,0x1a},
	{0x58,0x3b,0x16},
	{0x58,0x3c,0x15},
	{0x58,0x3d,0x18},
	{0x58,0x3e,0x1f},
	{0x58,0x3f,0x25},
	{0x58,0x40,0x10},
	{0x58,0x41,0x0e},
	{0x58,0x42,0x0e},
	{0x58,0x43,0x0e},
	{0x58,0x44,0x0f},
	{0x58,0x45,0x0a},
	{0x58,0x46,0x08},
	{0x58,0x47,0x0f},
	{0x58,0x48,0x0f},
	{0x58,0x49,0x0f},
	{0x58,0x4a,0x0c},
	{0x58,0x4b,0x0f},
	{0x58,0x4c,0x09},
	{0x58,0x4d,0x10},
	{0x58,0x4e,0x11},
	{0x58,0x4f,0x10},
	{0x58,0x50,0x0f},
	{0x58,0x51,0x0e},
	{0x58,0x52,0x08},
	{0x58,0x53,0x10},
	{0x58,0x54,0x10},
	{0x58,0x55,0x10},
	{0x58,0x56,0x0e},
	{0x58,0x57,0x0e},
	{0x58,0x58,0x0a},
	{0x58,0x59,0x0e},
	{0x58,0x5a,0x0e},
	{0x58,0x5b,0x0e},
	{0x58,0x5c,0x0e},
	{0x58,0x5d,0x0d},
	{0x58,0x5e,0x08},
	{0x58,0x5f,0x0b},
	{0x58,0x60,0x0a},
	{0x58,0x61,0x0a},
	{0x58,0x62,0x09},
	{0x58,0x63,0x0d},
	{0x58,0x64,0x13},
	{0x58,0x65,0x0e},
	{0x58,0x66,0x10},
	{0x58,0x67,0x10},
	{0x58,0x68,0x0e},
	{0x58,0x69,0x11},
	{0x58,0x6a,0x12},
	{0x58,0x6b,0x10},
	{0x58,0x6c,0x10},
	{0x58,0x6d,0x10},
	{0x58,0x6e,0x10},
	{0x58,0x6f,0x11},
	{0x58,0x70,0x15},
	{0x58,0x71,0x10},
	{0x58,0x72,0x10},
	{0x58,0x73,0x10},
	{0x58,0x74,0x11},
	{0x58,0x75,0x11},
	{0x58,0x76,0x14},
	{0x58,0x77,0x0f},
	{0x58,0x78,0x10},
	{0x58,0x79,0x10},
	{0x58,0x7a,0x10},
	{0x58,0x7b,0x11},
	{0x58,0x7c,0x12},
	{0x58,0x7d,0x0f},
	{0x58,0x7e,0x0f},
	{0x58,0x7f,0x10},
	{0x58,0x80,0x10},
	{0x58,0x81,0x0f},
	{0x58,0x82,0x12},
	{0x58,0x83,0x0e},
	{0x58,0x84,0x10},
	{0x58,0x85,0x10},
	{0x58,0x86,0x0e},
	{0x58,0x87,0x0e},
	*/
	{0x51,0x80,0xff},
	{0x51,0x81,0x52},
	{0x51,0x82,0x11},
	{0x51,0x83,0x14},
	{0x51,0x84,0x25},
	{0x51,0x85,0x24},
	{0x51,0x86,0x14},
	{0x51,0x87,0x14},
	{0x51,0x88,0x14},
	{0x51,0x89,0x6c},
	{0x51,0x8a,0x60},
	{0x51,0x8b,0xbd},
	{0x51,0x8c,0x9c},
	{0x51,0x8d,0x3d},
	{0x51,0x8e,0x34},
	{0x51,0x8f,0x57},
	{0x51,0x90,0x4a},
	{0x51,0x91,0xf8},
	{0x51,0x92,0x04},
	{0x51,0x93,0x70},
	{0x51,0x94,0xf0},
	{0x51,0x95,0xf0},
	{0x51,0x96,0x03},
	{0x51,0x97,0x01},
	{0x51,0x98,0x04},
	{0x51,0x99,0x00},
	{0x51,0x9a,0x04},
	{0x51,0x9b,0x35},
	{0x51,0x9c,0x08},
	{0x51,0x9d,0xb8},
	{0x51,0x9e,0xa0},
	{0x52,0x8a,0x00},
	{0x52,0x8b,0x01},
	{0x52,0x8c,0x04},
	{0x52,0x8d,0x08},
	{0x52,0x8e,0x10},
	{0x52,0x8f,0x20},
	{0x52,0x90,0x30},
	{0x52,0x92,0x00},
	{0x52,0x93,0x00},
	{0x52,0x94,0x00},
	{0x52,0x95,0x01},
	{0x52,0x96,0x00},
	{0x52,0x97,0x04},
	{0x52,0x98,0x00},
	{0x52,0x99,0x08},
	{0x52,0x9a,0x00},
	{0x52,0x9b,0x10},
	{0x52,0x9c,0x00},
	{0x52,0x9d,0x20},
	{0x52,0x9e,0x00},
	{0x52,0x9f,0x30},
	{0x52,0x82,0x00},
	{0x53,0x00,0x00},
	{0x53,0x01,0x20},
	{0x53,0x02,0x00},
	{0x53,0x03,0x7c},
	{0x53,0x0c,0x00},
	{0x53,0x0d,0x10},
	{0x53,0x0e,0x20},
	{0x53,0x0f,0x80},
	{0x53,0x10,0x20},
	{0x53,0x11,0x80},
	{0x53,0x08,0x20},
	{0x53,0x09,0x40},
	{0x53,0x04,0x00},
	{0x53,0x05,0x30},
	{0x53,0x06,0x00},
	{0x53,0x07,0x80},
	{0x53,0x14,0x08},
	{0x53,0x15,0x20},
	{0x53,0x19,0x30},
	{0x53,0x16,0x10},
	{0x53,0x17,0x00},
	{0x53,0x18,0x02},
	{0x53,0x80,0x01},
	{0x53,0x81,0x00},
	{0x53,0x82,0x00},
	{0x53,0x83,0x1f},
	{0x53,0x84,0x00},
	{0x53,0x85,0x06},
	{0x53,0x86,0x00},
	{0x53,0x87,0x00},
	{0x53,0x88,0x00},
	{0x53,0x89,0xE1},
	{0x53,0x8A,0x00},
	{0x53,0x8B,0x2B},
	{0x53,0x8C,0x00},
	{0x53,0x8D,0x00},
	{0x53,0x8E,0x00},
	{0x53,0x8F,0x10},
	{0x53,0x90,0x00},
	{0x53,0x91,0xB3},
	{0x53,0x92,0x00},
	{0x53,0x93,0xA6},
	{0x53,0x94,0x08},
	{0x54,0x80,0x14},
	{0x54,0x81,0x21},
	{0x54,0x82,0x36},
	{0x54,0x83,0x57},
	{0x54,0x84,0x65},
	{0x54,0x85,0x71},
	{0x54,0x86,0x7D},
	{0x54,0x87,0x87},
	{0x54,0x88,0x91},
	{0x54,0x89,0x9A},
	{0x54,0x8A,0xAA},
	{0x54,0x8B,0xB8},
	{0x54,0x8C,0xCD},
	{0x54,0x8D,0xDD},
	{0x54,0x8E,0xEA},
	{0x54,0x8F,0x1d},
	{0x54,0x90,0x05},
	{0x54,0x91,0x00},
	{0x54,0x92,0x04},
	{0x54,0x93,0x20},
	{0x54,0x94,0x03},
	{0x54,0x95,0x60},
	{0x54,0x96,0x02},
	{0x54,0x97,0xB8},
	{0x54,0x98,0x02},
	{0x54,0x99,0x86},
	{0x54,0x9A,0x02},
	{0x54,0x9B,0x5B},
	{0x54,0x9C,0x02},
	{0x54,0x9D,0x3B},
	{0x54,0x9E,0x02},
	{0x54,0x9F,0x1C},
	{0x54,0xA0,0x02},
	{0x54,0xA1,0x04},
	{0x54,0xA2,0x01},
	{0x54,0xA3,0xED},
	{0x54,0xA4,0x01},
	{0x54,0xA5,0xC5},
	{0x54,0xA6,0x01},
	{0x54,0xA7,0xA5},
	{0x54,0xA8,0x01},
	{0x54,0xA9,0x6C},
	{0x54,0xAA,0x01},
	{0x54,0xAB,0x41},
	{0x54,0xAC,0x01},
	{0x54,0xAD,0x20},
	{0x54,0xAE,0x00},
	{0x54,0xAF,0x16},
	{0x54,0xB0,0x01},
	{0x54,0xB1,0x20},
	{0x54,0xB2,0x00},
	{0x54,0xB3,0x10},
	{0x54,0xB4,0x00},
	{0x54,0xB5,0xf0},
	{0x54,0xB6,0x00},
	{0x54,0xB7,0xDF},
	{0x54,0x02,0x3f},
	{0x54,0x03,0x00},
	{0x55,0x00,0x10},
	{0x55,0x02,0x00},
	{0x55,0x03,0x06},
	{0x55,0x04,0x00},
	{0x55,0x05,0x7f},
	{0x50,0x25,0x80},
	{0x3a,0x0f,0x48},//0x30
	{0x3a,0x10,0x38},//0x28
	{0x3a,0x1b,0x50},//0x30
	{0x3a,0x1e,0x30},//0x28
	{0x3a,0x11,0x71},//0x61
	{0x3a,0x1f,0x10},
	{0x56,0x88,0xfd},
	{0x56,0x89,0xdf},
	{0x56,0x8a,0xfe},
	{0x56,0x8b,0xef},
	{0x56,0x8c,0xfe},
	{0x56,0x8d,0xef},
	{0x56,0x8e,0xaa},
	{0x56,0x8f,0xaa},

	{0x38,0x00 ,0x1 },
	{0x38,0x01 ,0x50},            
	{0x38,0x02 ,0x0 },            
	{0x38,0x03 ,0x8 },            
	{0x38,0x04 ,0x5 },            
	{0x38,0x05 ,0x0 },            
	{0x38,0x06 ,0x3 },            
	{0x38,0x07 ,0xc0},            
	{0x38,0x08 ,0x3 },            
	{0x38,0x09 ,0x20},            
	{0x38,0x0a ,0x2 },            
	{0x38,0x0b ,0x58},            
	{0x38,0x0c ,0xc },            
	{0x38,0x0d ,0x80},            
	{0x38,0x0e ,0x3 },            
	{0x38,0x0f ,0xe8},            
	{0x50,0x01 ,0xff},            
	{0x56,0x80 ,0x0 },            
	{0x56,0x81 ,0x0 },            
	{0x56,0x82 ,0x5 },            
	{0x56,0x83 ,0x0 },            
	{0x56,0x84 ,0x0 },            
	{0x56,0x85 ,0x0 },            
	{0x56,0x86 ,0x3 },            
	{0x56,0x87 ,0xc0},            
	{0x56,0x87 ,0xc0},            
	{0x38,0x15 ,0x02},            
	{0x35,0x03 ,0x00}, 
	
	//lens shading 1
	#if 1
	{0x50,0x00, 0xcf},
	{0x58,0x00, 0x27},
	{0x58,0x01, 0x19},
	{0x58,0x02, 0x12},
	{0x58,0x03, 0x0f},
	{0x58,0x04, 0x10},
	{0x58,0x05, 0x15},
	{0x58,0x06, 0x1e},
	{0x58,0x07, 0x2f},
	{0x58,0x08, 0x15},
	{0x58,0x09, 0x0d},
	{0x58,0x0a, 0x0a},
	{0x58,0x0b, 0x09},
	{0x58,0x0c, 0x0a},
	{0x58,0x0d, 0x0c},
	{0x58,0x0e, 0x12},
	{0x58,0x0f, 0x19},
	{0x58,0x10, 0x0b},
	{0x58,0x11, 0x07},
	{0x58,0x12, 0x04},
	{0x58,0x13, 0x03},
	{0x58,0x14, 0x03},
	{0x58,0x15, 0x06},
	{0x58,0x16, 0x0a},
	{0x58,0x17, 0x0f},
	{0x58,0x18, 0x0a},
	{0x58,0x19, 0x05},
	{0x58,0x1a, 0x01},
	{0x58,0x1b, 0x00},
	{0x58,0x1c, 0x00},
	{0x58,0x1d, 0x03},
	{0x58,0x1e, 0x08},
	{0x58,0x1f, 0x0c},
	{0x58,0x20, 0x0a},
	{0x58,0x21, 0x05},
	{0x58,0x22, 0x01},
	{0x58,0x23, 0x00},
	{0x58,0x24, 0x00},
	{0x58,0x25, 0x03},
	{0x58,0x26, 0x08},
	{0x58,0x27, 0x0c},
	{0x58,0x28, 0x0e},
	{0x58,0x29, 0x08},
	{0x58,0x2a, 0x06},
	{0x58,0x2b, 0x04},
	{0x58,0x2c, 0x05},
	{0x58,0x2d, 0x07},
	{0x58,0x2e, 0x0b},
	{0x58,0x2f, 0x12},
	{0x58,0x30, 0x18},
	{0x58,0x31, 0x10},
	{0x58,0x32, 0x0c},
	{0x58,0x33, 0x0a},
	{0x58,0x34, 0x0b},
	{0x58,0x35, 0x0e},
	{0x58,0x36, 0x15},
	{0x58,0x37, 0x19},
	{0x58,0x38, 0x32},
	{0x58,0x39, 0x1f},
	{0x58,0x3a, 0x18},
	{0x58,0x3b, 0x16},
	{0x58,0x3c, 0x17},
	{0x58,0x3d, 0x1e},
	{0x58,0x3e, 0x26},
	{0x58,0x3f, 0x53},
	{0x58,0x40, 0x10},
	{0x58,0x41, 0x0f},
	{0x58,0x42, 0x0d},
	{0x58,0x43, 0x0c},
	{0x58,0x44, 0x0e},
	{0x58,0x45, 0x09},
	{0x58,0x46, 0x11},
	{0x58,0x47, 0x10},
	{0x58,0x48, 0x10},
	{0x58,0x49, 0x10},
	{0x58,0x4a, 0x10},
	{0x58,0x4b, 0x0e},
	{0x58,0x4c, 0x10},
	{0x58,0x4d, 0x10},
	{0x58,0x4e, 0x11},
	{0x58,0x4f, 0x10},
	{0x58,0x50, 0x0f},
	{0x58,0x51, 0x0c},
	{0x58,0x52, 0x0f},
	{0x58,0x53, 0x10},
	{0x58,0x54, 0x10},
	{0x58,0x55, 0x0f},
	{0x58,0x56, 0x0e},
	{0x58,0x57, 0x0b},
	{0x58,0x58, 0x10},
	{0x58,0x59, 0x0d},
	{0x58,0x5a, 0x0d},
	{0x58,0x5b, 0x0c},
	{0x58,0x5c, 0x0c},
	{0x58,0x5d, 0x0c},
	{0x58,0x5e, 0x0b},
	{0x58,0x5f, 0x0c},
	{0x58,0x60, 0x0c},
	{0x58,0x61, 0x0c},
	{0x58,0x62, 0x0d},
	{0x58,0x63, 0x08},
	{0x58,0x64, 0x11},
	{0x58,0x65, 0x18},
	{0x58,0x66, 0x18},
	{0x58,0x67, 0x19},
	{0x58,0x68, 0x17},
	{0x58,0x69, 0x19},
	{0x58,0x6a, 0x16},
	{0x58,0x6b, 0x13},
	{0x58,0x6c, 0x13},
	{0x58,0x6d, 0x12},
	{0x58,0x6e, 0x13},
	{0x58,0x6f, 0x16},
	{0x58,0x70, 0x14},
	{0x58,0x71, 0x12},
	{0x58,0x72, 0x10},
	{0x58,0x73, 0x11},
	{0x58,0x74, 0x11},
	{0x58,0x75, 0x16},
	{0x58,0x76, 0x14},
	{0x58,0x77, 0x11},
	{0x58,0x78, 0x10},
	{0x58,0x79, 0x0f},
	{0x58,0x7a, 0x10},
	{0x58,0x7b, 0x14},
	{0x58,0x7c, 0x13},
	{0x58,0x7d, 0x12},
	{0x58,0x7e, 0x11},
	{0x58,0x7f, 0x11},
	{0x58,0x80, 0x12},
	{0x58,0x81, 0x15},
	{0x58,0x82, 0x14},
	{0x58,0x83, 0x15},
	{0x58,0x84, 0x15},
	{0x58,0x85, 0x15},
	{0x58,0x86, 0x13},
	{0x58,0x87, 0x17},
	#endif 
	      
	//lens shading 2
	#if 0
	{0x50,0x00, 0xcf},
	{0x58,0x00, 0x39},
	{0x58,0x01, 0x2c},
	{0x58,0x02, 0x21},
	{0x58,0x03, 0x1d},
	{0x58,0x04, 0x1d},
	{0x58,0x05, 0x22},
	{0x58,0x06, 0x2d},
	{0x58,0x07, 0x3b},
	{0x58,0x08, 0x1e},
	{0x58,0x09, 0x16},
	{0x58,0x0a, 0x10},
	{0x58,0x0b, 0xe },
	{0x58,0x0c, 0xe },
	{0x58,0x0d, 0x11},
	{0x58,0x0e, 0x17},
	{0x58,0x0f, 0x1e},
	{0x58,0x10, 0x11},
	{0x58,0x11, 0xc },
	{0x58,0x12, 0x8 },
	{0x58,0x13, 0x5 },
	{0x58,0x14, 0x6 },
	{0x58,0x15, 0x8 },
	{0x58,0x16, 0xd	},
	{0x58,0x17, 0x12},
	{0x58,0x18, 0xd},
	{0x58,0x19, 0x9},
	{0x58,0x1a, 0x3},
	{0x58,0x1b, 0x0},
	{0x58,0x1c, 0x0},
	{0x58,0x1d, 0x4},
	{0x58,0x1e, 0x9},
	{0x58,0x1f, 0xe},
	{0x58,0x20, 0xe},
	{0x58,0x21, 0x8},
	{0x58,0x22, 0x3},
	{0x58,0x23, 0x0},
	{0x58,0x24, 0x0},
	{0x58,0x25, 0x3},
	{0x58,0x26, 0x9},
	{0x58,0x27, 0xe},
	{0x58,0x28, 0x12},
	{0x58,0x29, 0xc},
	{0x58,0x2a, 0x8},
	{0x58,0x2b, 0x5},
	{0x58,0x2c, 0x6},
	{0x58,0x2d, 0x8},
	{0x58,0x2e, 0xd},
	{0x58,0x2f, 0x13},
	{0x58,0x30, 0x1f},
	{0x58,0x31, 0x16},
	{0x58,0x32, 0x11},
	{0x58,0x33, 0xe},
	{0x58,0x34, 0xf},
	{0x58,0x35, 0x11},
	{0x58,0x36, 0x17},
	{0x58,0x37, 0x20},
	{0x58,0x38, 0x38},
	{0x58,0x39, 0x2b},
	{0x58,0x3a, 0x21},
	{0x58,0x3b, 0x1d},
	{0x58,0x3c, 0x1d},
	{0x58,0x3d, 0x22},
	{0x58,0x3e, 0x2c},
	{0x58,0x3f, 0x37},
	{0x58,0x40, 0x8},
	{0x58,0x41, 0xe},
	{0x58,0x42, 0xd},
	{0x58,0x43, 0xd},
	{0x58,0x44, 0xd},
	{0x58,0x45, 0xa},
	{0x58,0x46, 0xe},
	{0x58,0x47, 0xc},
	{0x58,0x48, 0xe},
	{0x58,0x49, 0xe},
	{0x58,0x4a, 0xc},
	{0x58,0x4b, 0xf},
	{0x58,0x4c, 0xf},
	{0x58,0x4d, 0xe},
	{0x58,0x4e, 0x10},
	{0x58,0x4f, 0x10},
	{0x58,0x50, 0xf},
	{0x58,0x51, 0xe},
	{0x58,0x52, 0xf},
	{0x58,0x53, 0xe},
	{0x58,0x54, 0x10},
	{0x58,0x55, 0x10},
	{0x58,0x56, 0xe},
	{0x58,0x57, 0xe},
	{0x58,0x58, 0xf},
	{0x58,0x59, 0xc},
	{0x58,0x5a, 0xe},
	{0x58,0x5b, 0xe},
	{0x58,0x5c, 0xd},
	{0x58,0x5d, 0xd},
	{0x58,0x5e, 0xb},
	{0x58,0x5f, 0xc},
	{0x58,0x60, 0xc},
	{0x58,0x61, 0xd},
	{0x58,0x62, 0xb},
	{0x58,0x63, 0xa},
	{0x58,0x64, 0xf},
	{0x58,0x65, 0x10},
	{0x58,0x66, 0x13},
	{0x58,0x67, 0x13},
	{0x58,0x68, 0x10},
	{0x58,0x69, 0xd},
	{0x58,0x6a, 0x15},
	{0x58,0x6b, 0x14},
	{0x58,0x6c, 0x12},
	{0x58,0x6d, 0x12},
	{0x58,0x6e, 0x13},
	{0x58,0x6f, 0x15},
	{0x58,0x70, 0x17},
	{0x58,0x71, 0x11},
	{0x58,0x72, 0x10},
	{0x58,0x73, 0x10},
	{0x58,0x74, 0x11},
	{0x58,0x75, 0x15},
	{0x58,0x76, 0x16},
	{0x58,0x77, 0x11},
	{0x58,0x78, 0x10},
	{0x58,0x79, 0x10},
	{0x58,0x7a, 0x11},
	{0x58,0x7b, 0x15},
	{0x58,0x7c, 0x14},
	{0x58,0x7d, 0x13},
	{0x58,0x7e, 0x11},
	{0x58,0x7f, 0x11},
	{0x58,0x80, 0x13},
	{0x58,0x81, 0x14},
	{0x58,0x82, 0x10},
	{0x58,0x83, 0x11},
	{0x58,0x84, 0x13},
	{0x58,0x85, 0x12},
	{0x58,0x86, 0x10},
	{0x58,0x87, 0x11},
    	#endif 
};                                    
                                      
//for capture                         
static struct ov5642_regval_list ov5642_qsxga_regs[] = { //qsxga: 2592*1936
	//capture 5Mega 5fps          
	                              
	{0x30,0x08, 0x42}, //software : Sensor vsync singal may not output if haven't sleep the sensor when transfer the array,
	//{0x3503 , 0x7 },            
	{0x30,0x00 , 0x0 },           
	{0x30,0x01 , 0x0 },           
	{0x30,0x02 , 0x0 },           
	{0x30,0x03 , 0x0 },           
	{0x30,0x05 , 0xff},           
	{0x30,0x06 , 0xff},           
	{0x30,0x07 , 0x3f},           
	{0x35,0x0c , 0x7 },           
	{0x35,0x0d , 0xd0},           
	{0x36,0x02 , 0xe4},           
	{0x36,0x12 , 0xac},           
	{0x36,0x13 , 0x44},           
	{0x36,0x21 , 0x27},           
	{0x36,0x22 , 0x8 },           
	{0x36,0x23 , 0x22},           
	{0x36,0x04 , 0x60},           
	{0x37,0x05 , 0xda},           
	{0x37,0x0a , 0x80},           
	{0x38,0x01 , 0x8a},           
	{0x38,0x03 , 0xa },           
	{0x38,0x04 , 0xa },           
	{0x38,0x05 , 0x20},           
	{0x38,0x06 , 0x7 },           
	{0x38,0x07 , 0x98},           
	{0x38,0x08 , 0xa },           
	{0x38,0x09 , 0x20},           
	{0x38,0x0a , 0x7 },           
	{0x38,0x0b , 0x98},           
	{0x38,0x0c , 0xc },           
	{0x38,0x0d , 0x80},           
	{0x38,0x0e , 0x7 },           
	{0x38,0x0f , 0xd0},           
	{0x38,0x10 , 0xc2},           
	{0x38,0x15 , 0x1 },           
	{0x38,0x18 , 0xc0},           
	{0x38,0x24 , 0x1 },           
	{0x38,0x27 , 0xa },           
	{0x3a,0x00 , 0x78},           
	{0x3a,0x0d , 0x10},           
	{0x3a,0x0e , 0xd },           
	{0x3a,0x10 , 0x32},           
	{0x3a,0x1b , 0x40},           
	{0x3a,0x1e , 0x2e},           
	{0x3a,0x11 , 0xd0},           
	{0x3a,0x1f , 0x40},           
	{0x3a,0x00 , 0x78},           
	{0x46,0x0b , 0x37},           
	{0x47,0x1d , 0x5 },
	{0x47,0x13 , 0x2 },
	{0x47,0x1c , 0xd0},
	{0x56,0x82 , 0xa },
	{0x56,0x83 , 0x20},
	{0x56,0x86 , 0x7 },
	{0x56,0x87 , 0x98},
	{0x50,0x01 , 0x7f},//0x01 },  this should be 0x7f
	{0x58,0x9b , 0x0 },
	{0x58,0x9a , 0xc0},
	{0x44,0x07 , 0xc },
	{0x58,0x9b , 0x0 },
	{0x58,0x9a , 0xc0},
	{0x30,0x02 , 0x0 },
	{0x30,0x02 , 0x0 },
	{0x35,0x03 , 0x0 },
	{0x30,0x10 , 0x10},
	{0x30,0x09 , 0x1 },
	{0x30,0x0a , 0x56},
	{0x30,0x08 , 0x02},			//software wake
	
	
	#if 0
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting
	{0x30, 0x34, 0x1a},                            	    
	{0x30, 0x35, 0x21},                            	    
	{0x30, 0x36, 0x46},                            	    
	{0x30, 0x37, 0x13},                            	    
	{0x31, 0x08, 0x01},                            	    
	{0x38, 0x24, 0x01},                            	    
	{0xff, 0xff, 0x32},//delay 50ms,//delay 100ms                   
	//timing                                              
	//2592*1936                                           
	{0x38, 0x08, 0x0a}, //H size MSB                    
	{0x38, 0x09, 0x20}, //H size LSB                    
	{0x38, 0x0a, 0x07}, //V size MSB                    
	{0x38, 0x0b, 0x90}, //V size LSB                    
	{0x38, 0x0c, 0x0b}, //HTS MSB                       
	{0x38, 0x0d, 0x1c}, //HTS LSB                       
	{0x38, 0x0e, 0x07}, //VTS MSB                       
	{0x38, 0x0f, 0xb0}, //LSB                           
	//banding step                                        
	{0x3a, 0x08, 0x00}, //50HZ step MSB                 
	{0x3a, 0x09, 0x62}, //50HZ step LSB                 
	{0x3a, 0x0a, 0x00}, //60HZ step MSB                 
	{0x3a, 0x0b, 0x52}, //60HZ step LSB                 
	{0x3a, 0x0e, 0x14}, //50HZ step max                 
	{0x3a, 0x0d, 0x18}, //60HZ step max                 
    {0x35, 0x03, 0x07}, //AEC disable
    {0x35, 0x0c, 0x00},                                   
	{0x35, 0x0d, 0x00},         
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold

    {0x38, 0x14, 0x11}, //horizton subsample
	{0x38, 0x15, 0x11}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0x00}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9f}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte 
  
    {0x53, 0x08, 0x65},		//sharpen manual    
    {0x53, 0x02, 0x20}, //sharpness      
                                                   
    {0x40, 0x02, 0xc5},  //BLC related                  
	{0x40, 0x05, 0x1a}, // BLC related               

	{0x36, 0x18, 0x04},                                 
	{0x36, 0x12, 0x2b},                                 
	{0x37, 0x09, 0x12},                                 
	{0x37, 0x0c, 0x00},                                 
	{0x3a, 0x02, 0x07}, //60HZ max exposure limit MSB   
	{0x3a, 0x03, 0xb0}, //60HZ max exposure limit LSB   
	{0x3a, 0x14, 0x07}, //50HZ max exposure limit MSB   
	{0x3a, 0x15, 0xb0}, //50HZ max exposure limit LSB   
	{0x40, 0x04, 0x06}, //BLC line number               
	{0x48, 0x37, 0x2c},//PCLK period                    
	{0x50, 0x01, 0xa3},//ISP effect    
	
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
		     	 		//00: 1x   01: 2x  10: 3x  11: 4x 	   
		     	 			
	//power down release
	{0x30, 0x08, 0x02}, 
	{0xff, 0xff, 0x32},//delay 50ms    
	#endif         
};

static struct ov5642_regval_list ov5642_qxga_regs[] = { //qxga: 2048*1536
	//capture 3Mega 5fps
	{0x30,0x08, 0x42},   //software sleep : Sensor vsync singal may not output if haven't sleep the sensor when transfer the array,
	//{0x3503 , 0x7 },
	{0x30,0x00 , 0x0 },
	{0x30,0x01 , 0x0 },
	{0x30,0x02 , 0x0 },
	{0x30,0x03 , 0x0 },
	{0x30,0x05 , 0xff},
	{0x30,0x06 , 0xff},
	{0x30,0x07 , 0x3f},
	{0x35,0x0c , 0x7 },
	{0x35,0x0d , 0xd0},
	{0x36,0x02 , 0xe4},
	{0x36,0x12 , 0xac},
	{0x36,0x13 , 0x44},
	{0x36,0x21 , 0x27},
	{0x36,0x22 , 0x8 },
	{0x36,0x23 , 0x22},
	{0x36,0x04 , 0x60},
	{0x37,0x05 , 0xda},
	{0x37,0x0a , 0x80},
	{0x38,0x01 , 0x8a},
	{0x38,0x03 , 0xa },
	{0x38,0x04 , 0xa },
	{0x38,0x05 , 0x20},
	{0x38,0x06 , 0x7 },
	{0x38,0x07 , 0x98},
	{0x38,0x08 , 0xa },
	{0x38,0x09 , 0x20},
	{0x38,0x0a , 0x7 },
	{0x38,0x0b , 0x98},
	{0x38,0x0c , 0xc },
	{0x38,0x0d , 0x80},
	{0x38,0x0e , 0x7 },
	{0x38,0x0f , 0xd0},
	{0x38,0x10 , 0xc2},
	{0x38,0x15 , 0x1 },
	{0x38,0x18 , 0xc0},
	{0x38,0x24 , 0x1 },
	{0x38,0x27 , 0xa },
	{0x3a,0x00 , 0x78},
	{0x3a,0x0d , 0x10},
	{0x3a,0x0e , 0xd },
	{0x3a,0x10 , 0x32},
	{0x3a,0x1b , 0x40},
	{0x3a,0x1e , 0x2e},
	{0x3a,0x11 , 0xd0},
	{0x3a,0x1f , 0x40},
	{0x3a,0x00 , 0x78},
	{0x46,0x0b , 0x37},
	{0x47,0x1d , 0x5 },
	{0x47,0x13 , 0x2 },
	{0x47,0x1c , 0xd0},
	{0x56,0x82 , 0xa },
	{0x56,0x83 , 0x20},
	{0x56,0x86 , 0x7 },
	{0x56,0x87 , 0x98},
	{0x50,0x01 , 0x1 },
	{0x58,0x9b , 0x0 },
	{0x58,0x9a , 0xc0},
	{0x44,0x07 , 0xc },
	{0x58,0x9b , 0x0 },
	{0x58,0x9a , 0xc0},
	{0x30,0x02 , 0x0 },
	{0x30,0x02 , 0x0 },
	{0x35,0x03 , 0x0 },
	{0x30,0x10 , 0x10},
	{0x30,0x09 , 0x1 },
	{0x30,0x0a , 0x56},

	{0x38,0x00 , 0x1 },
	{0x38,0x01 , 0x8A},
	{0x38,0x02 , 0x0 },
	{0x38,0x03 , 0xA },
	{0x38,0x04 , 0xA },
	{0x38,0x05 , 0x20},
	{0x38,0x06 , 0x7 },
	{0x38,0x07 , 0x98},
	{0x38,0x08 , 0x8 },
	{0x38,0x09 , 0x0 },
	{0x38,0x0a , 0x6 },
	{0x38,0x0b , 0x0 },
	{0x38,0x0c , 0xc },
	{0x38,0x0d , 0x80},
	{0x38,0x0e , 0x7 },
	{0x38,0x0f , 0xd0},
	{0x50,0x01 , 0x7f},
	{0x56,0x80 , 0x0 },
	{0x56,0x81 , 0x0 },
	{0x56,0x82 , 0xA },
	{0x56,0x83 , 0x20},
	{0x56,0x84 , 0x0 },
	{0x56,0x85 , 0x0 },
	{0x56,0x86 , 0x7 },
	{0x56,0x87 , 0x98},
	{0x30,0x08 , 0x02},   //software wake
	#if 0
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting
	{0x30, 0x34, 0x1a},                            	 
	{0x30, 0x35, 0x21},                            	 
	{0x30, 0x36, 0x46},                            	 
	{0x30, 0x37, 0x13},                            	 
	{0x31, 0x08, 0x01},                            	 
	{0x38, 0x24, 0x01},                            	 
	{0xff, 0xff, 0x32},//delay 50ms,//delay 100ms                
	//timing                                            
	//2048*1536                                         
	{0x38, 0x08, 0x08}, //H size MSB                 
	{0x38, 0x09, 0x00}, //H size LSB                 
	{0x38, 0x0a, 0x06}, //V size MSB                 
	{0x38, 0x0b, 0x00}, //V size LSB                 
	{0x38, 0x0c, 0x0b}, //HTS MSB                    
	{0x38, 0x0d, 0x1c}, //HTS LSB                    
	{0x38, 0x0e, 0x07}, //VTS MSB                    
	{0x38, 0x0f, 0xb0}, //LSB                        
	//banding step                                     
	{0x3a, 0x08, 0x00}, //50HZ step MSB              
	{0x3a, 0x09, 0x62}, //50HZ step LSB              
	{0x3a, 0x0a, 0x00}, //60HZ step MSB              
	{0x3a, 0x0b, 0x52}, //60HZ step LSB              
	{0x3a, 0x0e, 0x14}, //50HZ step max              
	{0x3a, 0x0d, 0x18}, //60HZ step max              
	                                                 
	{0x35, 0x03, 0x07}, //AEC disable
	{0x35, 0x0c, 0x00},                              
	{0x35, 0x0d, 0x00},                              
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold   
                                                   
	{0x38, 0x14, 0x11}, //horizton subsample
	{0x38, 0x15, 0x11}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0x00}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9f}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte 
	
	{0x53, 0x08, 0x65},	//sharpen manual
    {0x53, 0x02, 0x20}, //sharpness                    
	                                   
    {0x40, 0x02, 0xc5},  //BLC related               
	{0x40, 0x05, 0x1a}, // BLC related                              
	                                                                           
	{0x36, 0x18, 0x04},                              
	{0x36, 0x12, 0x2b},                              
	{0x37, 0x09, 0x12},                              
	{0x37, 0x0c, 0x00}, 
	{0x3a, 0x02, 0x07}, //60HZ max exposure limit MSB
	{0x3a, 0x03, 0xb0}, //60HZ max exposure limit LSB
	{0x3a, 0x14, 0x07}, //50HZ max exposure limit MSB
	{0x3a, 0x15, 0xb0}, //50HZ max exposure limit LSB
	{0x40, 0x04, 0x06}, //BLC line number
	{0x48, 0x37, 0x2c},//PCLK period                              
	{0x50, 0x01, 0xa3},//ISP effect  
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x   
	//power  down  release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms              
	#endif
};                                    

static struct ov5642_regval_list ov5642_uxga_regs[] = { //UXGA: 1600*1200
	//capture 2Mega 5fps
	{0x30,0x08 , 0x42},   //software sleep : Sensor vsync singal may not output if haven't sleep the sensor when transfer the array,
	//{0x3503 , 0x7 },
	{0x30,0x00 , 0x0 },
	{0x30,0x01 , 0x0 },
	{0x30,0x02 , 0x0 },
	{0x30,0x03 , 0x0 },
	{0x30,0x05 , 0xff},
	{0x30,0x06 , 0xff},
	{0x30,0x07 , 0x3f},
	{0x35,0x0c , 0x7 },
	{0x35,0x0d , 0xd0},
	{0x36,0x02 , 0xe4},
	{0x36,0x12 , 0xac},
	{0x36,0x13 , 0x44},
	{0x36,0x21 , 0x27},
	{0x36,0x22 , 0x8 },
	{0x36,0x23 , 0x22},
	{0x36,0x04 , 0x60},
	{0x37,0x05 , 0xda},
	{0x37,0x0a , 0x80},
	{0x38,0x01 , 0x8a},
	{0x38,0x03 , 0xa },
	{0x38,0x04 , 0xa },
	{0x38,0x05 , 0x20},
	{0x38,0x06 , 0x7 },
	{0x38,0x07 , 0x98},
	{0x38,0x08 , 0xa },
	{0x38,0x09 , 0x20},
	{0x38,0x0a , 0x7 },
	{0x38,0x0b , 0x98},
	{0x38,0x0c , 0xc },
	{0x38,0x0d , 0x80},
	{0x38,0x0e , 0x7 },
	{0x38,0x0f , 0xd0},
	{0x38,0x10 , 0xc2},
	{0x38,0x15 , 0x1 },
	{0x38,0x18 , 0xc0},
	{0x38,0x24 , 0x1 },
	{0x38,0x27 , 0xa },
	{0x3a,0x00 , 0x78},
	{0x3a,0x0d , 0x10},
	{0x3a,0x0e , 0xd },
	{0x3a,0x10 , 0x32},
	{0x3a,0x1b , 0x40},
	{0x3a,0x1e , 0x2e},
	{0x3a,0x11 , 0xd0},
	{0x3a,0x1f , 0x40},
	{0x3a,0x00 , 0x78},
	{0x46,0x0b , 0x37},
	{0x47,0x1d , 0x5 },
	{0x47,0x13 , 0x2 },
	{0x47,0x1c , 0xd0},
	{0x56,0x82 , 0xa },
	{0x56,0x83 , 0x20},
	{0x56,0x86 , 0x7 },
	{0x56,0x87 , 0x98},
	{0x50,0x01 , 0x1 },
	{0x58,0x9b , 0x0 },
	{0x58,0x9a , 0xc0},
	{0x44,0x07 , 0xc },
	{0x58,0x9b , 0x0 },
	{0x58,0x9a , 0xc0},
	{0x30,0x02 , 0x0 },
	{0x30,0x02 , 0x0 },
	{0x35,0x03 , 0x0 },
	{0x30,0x10 , 0x10},
	{0x30,0x09 , 0x1 },
	{0x30,0x0a , 0x56},

	{0x38,0x00 , 0x1 },
	{0x38,0x01 , 0x8A},
	{0x38,0x02 , 0x0 },
	{0x38,0x03 , 0xA },
	{0x38,0x04 , 0xA },
	{0x38,0x05 , 0x20},
	{0x38,0x06 , 0x7 },
	{0x38,0x07 , 0x98},
	{0x38,0x08 , 0x6 },
	{0x38,0x09 , 0x40},
	{0x38,0x0a , 0x4 },
	{0x38,0x0b , 0xb0},
	{0x38,0x0c , 0xc },
	{0x38,0x0d , 0x80},
	{0x38,0x0e , 0x7 },
	{0x38,0x0f , 0xd0},
	{0x50,0x01 , 0x7f},
	{0x56,0x80 , 0x0 },
	{0x56,0x81 , 0x0 },
	{0x56,0x82 , 0xA },
	{0x56,0x83 , 0x20},
	{0x56,0x84 , 0x0 },
	{0x56,0x85 , 0x0 },
	{0x56,0x86 , 0x7 },
	{0x56,0x87 , 0x98},
	{0x30,0x08 , 0x02},   //software wake
	
	
	#if 0
	//power  down
	{0x30, 0x08, 0x42},
	//pll and clock setting
    {0x30, 0x34, 0x1a},
    {0x30, 0x35, 0x21},
    {0x30, 0x36, 0x46},
    {0x30, 0x37, 0x13},
    {0x31, 0x08, 0x01}, 
    {0x38, 0x24, 0x01},
    {0xff, 0xff, 0xc8},//delay 200ms,//delay 100ms
	//timing
    //1600* 1200
    {0x38, 0x08, 0x06}, //H size MSB
	{0x38, 0x09, 0x40}, //H size LSB
	{0x38, 0x0a, 0x04}, //V size MSB
	{0x38, 0x0b, 0xb0}, //V size LSB
	{0x38, 0x0c, 0x0b}, //HTS MSB
	{0x38, 0x0d, 0x1c}, //HTS LSB
	{0x38, 0x0e, 0x07}, //VTS MSB
	{0x38, 0x0f, 0xb0}, //LSB
	//banding step
	{0x3a, 0x08, 0x00}, //50HZ step MSB
	{0x3a, 0x09, 0x62}, //50HZ step LSB
	{0x3a, 0x0a, 0x00}, //60HZ step MSB
	{0x3a, 0x0b, 0x52}, //60HZ step LSB
	{0x3a, 0x0e, 0x14}, //50HZ step max
	{0x3a, 0x0d, 0x18}, //60HZ step max
        
	{0x35, 0x03, 0x07}, //AEC disable
    {0x35, 0x0c, 0x00}, 
	{0x35, 0x0d, 0x00},
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold
        
    {0x38, 0x14, 0x11}, //horizton subsample
	{0x38, 0x15, 0x11}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0x00}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9f}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte 
        
    {0x40, 0x02, 0xc5}, //BLC related
	{0x40, 0x05, 0x12}, //BLC related
    {0x53, 0x08, 0x65},	//sharpen manual
    {0x53, 0x02, 0x20}, //sharpness
	
	{0x36, 0x18, 0x04},
	{0x36, 0x12, 0x2b},
	{0x37, 0x09, 0x12},
	{0x37, 0x0c, 0x00},
	{0x3a, 0x02, 0x07},//60HZ max exposure limit MSB
	{0x3a, 0x03, 0xb0},//60HZ max exposure limit LSB
	{0x3a, 0x14, 0x07},//50HZ max exposure limit MSB
	{0x3a, 0x15, 0xb0},//50HZ max exposure limit LSB 
	{0x40, 0x04, 0x06},//BLC line number
	{0x48, 0x37, 0x2c}, //PCLK period                                       
	{0x50, 0x01, 0xa3}, //ISP effect  
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability //00 1x   01: 2x  10: 3x  11: 4x
	//power down  release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms
	#endif
};      
        
static struct ov5642_regval_list ov5642_sxga_regs[] = { //SXGA: 1280*960
	//capture 1.3 Mega 5fps
	
	#if 0
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting                                      								                              
	{0x30, 0x34, 0x1a},                                       	              
	{0x30, 0x35, 0x21},                                       	              
	{0x30, 0x36, 0x46},                                       	              
	{0x30, 0x37, 0x13},                                       	              
	{0x31, 0x08, 0x01},                                       	              
	{0x38, 0x24, 0x01},                                       	              
	{0xff, 0xff, 0x32},//delay 50ms,//delay 100ms
	//timing
	//1280*960
	{0x38, 0x08, 0x05}, //H size MSB
	{0x38, 0x09, 0x00}, //H size LSB
	{0x38, 0x0a, 0x03}, //V size MSB
	{0x38, 0x0b, 0xc0}, //V size LSB
	{0x38, 0x0c, 0x0b}, //HTS MSB
	{0x38, 0x0d, 0x1c}, //HTS LSB
	{0x38, 0x0e, 0x07}, //VTS MSB
	{0x38, 0x0f, 0xb0}, //LSB
	//banding step
	{0x3a, 0x08, 0x00}, //50HZ step MSB
	{0x3a, 0x09, 0x62}, //50HZ step LSB
	{0x3a, 0x0a, 0x00}, //60HZ step MSB
	{0x3a, 0x0b, 0x52}, //60HZ step LSB
	{0x3a, 0x0e, 0x14}, //50HZ step max
	{0x3a, 0x0d, 0x18}, //60HZ step max
	
	{0x35, 0x03, 0x07}, //AEC disable
	{0x35, 0x0c, 0x00}, 
	{0x35, 0x0d, 0x00},                                                                                     
	{0x3c, 0x07, 0x07}, //light meter 1 thereshold
    
    {0x38, 0x14, 0x11}, //horizton subsample
	{0x38, 0x15, 0x11}, //vertical subsample
	{0x38, 0x00, 0x00}, //x address start high byte
	{0x38, 0x01, 0x00}, //x address start low byte  
	{0x38, 0x02, 0x00},	//y address start high byte 
	{0x38, 0x03, 0x00}, //y address start low byte 
	{0x38, 0x04, 0x0a}, //x address end high byte
	{0x38, 0x05, 0x3f}, //x address end low byte 
	{0x38, 0x06, 0x07}, //y address end high byte
	{0x38, 0x07, 0x9f}, //y address end low byte 
	{0x38, 0x10, 0x00}, //isp hortizontal offset high byte
	{0x38, 0x11, 0x10}, //isp hortizontal offset low byte
	{0x38, 0x12, 0x00}, //isp vertical offset high byte
	{0x38, 0x13, 0x04},	//isp vertical offset low byte
    
    {0x40, 0x02, 0xc5}, //BLC related
	{0x40, 0x05, 0x12}, //BLC related
    {0x53, 0x08, 0x65},	//sharpen manual
    {0x53, 0x02, 0x20},//sharpness
	
	{0x36, 0x18, 0x04},
	{0x36, 0x12, 0x2b},
	{0x37, 0x09, 0x12},
	{0x37, 0x0c, 0x00},
	{0x3a, 0x02, 0x07}, //60HZ max exposure limit MSB
	{0x3a, 0x03, 0xb0}, //60HZ max exposure limit LSB
	{0x3a, 0x14, 0x07}, //50HZ max exposure limit MSB
	{0x3a, 0x15, 0xb0}, //50HZ max exposure limit LSB
	{0x40, 0x04, 0x06}, //BLC line number
                                                             	             
	{0x48, 0x37, 0x2c}, //PCLK period
	{0x50, 0x01, 0xa3}, //ISP effect   
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x   
	//power down release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms
	#endif
};

static struct ov5642_regval_list ov5642_xvga_regs[] = { //XVGA: 1024*768
	//capture 1Mega 5fps
	{0x30,0x08, 0x42}, //software : Sensor vsync singal may not output if haven't sleep the sensor when transfer the array,
	//{0x3503 , 0x7 },            
	{0x30,0x00 , 0x0 },           
	{0x30,0x01 , 0x0 },           
	{0x30,0x02 , 0x0 },           
	{0x30,0x03 , 0x0 },           
	{0x30,0x05 , 0xff},           
	{0x30,0x06 , 0xff},           
	{0x30,0x07 , 0x3f},           
	{0x35,0x0c , 0x7 },           
	{0x35,0x0d , 0xd0},           
	{0x36,0x02 , 0xe4},           
	{0x36,0x12 , 0xac},           
	{0x36,0x13 , 0x44},           
	{0x36,0x21 , 0x27},           
	{0x36,0x22 , 0x8 },           
	{0x36,0x23 , 0x22},           
	{0x36,0x04 , 0x60},           
	{0x37,0x05 , 0xda},           
	{0x37,0x0a , 0x80},           
	{0x38,0x01 , 0x8a},           
	{0x38,0x03 , 0xa },           
	{0x38,0x04 , 0xa },           
	{0x38,0x05 , 0x20},           
	{0x38,0x06 , 0x7 },           
	{0x38,0x07 , 0x98},           
	{0x38,0x08 , 0x4},           
	{0x38,0x09 , 0x00},           
	{0x38,0x0a , 0x3 },           
	{0x38,0x0b , 0x00},           
	{0x38,0x0c , 0xc },           
	{0x38,0x0d , 0x80},           
	{0x38,0x0e , 0x7 },           
	{0x38,0x0f , 0xd0},           
	{0x38,0x10 , 0xc2},           
	{0x38,0x15 , 0x1 },           
	{0x38,0x18 , 0xc0},           
	{0x38,0x24 , 0x1 },           
	{0x38,0x27 , 0xa },           
	{0x3a,0x00 , 0x78},           
	{0x3a,0x0d , 0x10},           
	{0x3a,0x0e , 0xd },           
	{0x3a,0x10 , 0x32},           
	{0x3a,0x1b , 0x40},           
	{0x3a,0x1e , 0x2e},           
	{0x3a,0x11 , 0xd0},           
	{0x3a,0x1f , 0x40},           
	{0x3a,0x00 , 0x78},           
	{0x46,0x0b , 0x37},           
	{0x47,0x1d , 0x5 },
	{0x47,0x13 , 0x2 },
	{0x47,0x1c , 0xd0},
	{0x56,0x82 , 0xa },
	{0x56,0x83 , 0x20},
	{0x56,0x86 , 0x7 },
	{0x56,0x87 , 0x98},
	{0x50,0x01 , 0x7f },
	{0x58,0x9b , 0x0 },
	{0x58,0x9a , 0xc0},
	{0x44,0x07 , 0xc },
	{0x58,0x9b , 0x0 },
	{0x58,0x9a , 0xc0},
	{0x30,0x02 , 0x0 },
	{0x30,0x02 , 0x0 },
	{0x35,0x03 , 0x0 },
	{0x30,0x10 , 0x10},
	{0x30,0x09 , 0x1 },
	{0x30,0x0a , 0x56},
	{0x46,0x0c , 0x20},
	{0x30,0x08 , 0x02},			//software wake
	
};

//forvideo 
static struct ov5642_regval_list ov5642_1080p_regs[] = { //1080: 1920*1080 
	//power  down
	{0x30, 0x08, 0x42},
	
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x 
	//power down  release
	{0xff, 0xff, 0x32},//delay 50ms
};

static struct ov5642_regval_list ov5642_720p_regs[] = { //1280*720
	//power down
	{0x30, 0x08, 0x42},
	//pll and clock setting
	{0x3a, 0x0a, 0x00}, //60HZ step MSB 
	{0x30, 0x2c, 0xc2},//bit[7:6]: output drive capability
	   	         //00 1x   01: 2x  10: 3x  11: 4x 
	//power down release
	{0x30, 0x08, 0x02},     
	{0xff, 0xff, 0x32},//delay 50ms
};

static struct ov5642_regval_list ov5642_svga_regs[] = { //SVGA: 800*600
	{0x38,0x19,0x81},
	{0x30,0x00,0xf8},
	{0x30,0x01,0x48},
	{0x30,0x02,0x5c},
	{0x30,0x03,0x02},
	{0x30,0x05,0xb7},
	{0x30,0x06,0x43},
	{0x30,0x07,0x37},
	{0x35,0x0c,0x07},//03
	{0x35,0x0d,0xd0},//e8
	{0x36,0x02,0xfc},
	{0x36,0x12,0xff},
	{0x36,0x13,0x00},
	{0x36,0x21,0xc7},//87
	{0x36,0x22,0x00},//60
	{0x36,0x23,0x22},//01
	{0x36,0x04,0x40},//48
	{0x37,0x05,0xdb},
	{0x37,0x0a,0x81},
	{0x38,0x01,0x50},
	{0x38,0x03,0x08},
	{0x38,0x04,0x05},
	{0x38,0x05,0x00},
	{0x38,0x06,0x03},
	{0x38,0x07,0xc0},
	{0x38,0x08,0x03},
	{0x38,0x09,0x20},
	{0x38,0x0a,0x02},
	{0x38,0x0b,0x58},
	{0x38,0x0c,0x0c},
	{0x38,0x0d,0x80},
	{0x38,0x0e,0x03},
	{0x38,0x0f,0xe8},
	{0x38,0x10,0x40},//c0
	{0x38,0x15,0x02},
	{0x38,0x18,0xc1},
	{0x38,0x1c,0x21},
	{0x38,0x1d,0x50},
	{0x38,0x1e,0x01},
	{0x38,0x1f,0x20},
	{0x38,0x20,0x00},
	{0x38,0x21,0x00},
	{0x38,0x24,0x11},
	{0x38,0x25,0xb4},
	{0x38,0x26,0x00},
	{0x38,0x27,0x08},
	{0x3a,0x00,0x78},
	{0x30,0x11,0x08},
	{0x3c,0x01,0x00},
	{0x3c,0x00,0x00}, 
	{0x3a,0x08,0x09},
	{0x3a,0x09,0x60},
	{0x3a,0x0a,0x07},
	{0x3a,0x0b,0xd0},
	{0x3a,0x0d,0x08},
	{0x3a,0x0e,0x06},
	{0x3a,0x10,0x30},
	{0x3a,0x1b,0x3c},
	{0x3a,0x1e,0x30},
	{0x3a,0x11,0x70},
	{0x3a,0x1f,0x10},
	{0x30,0x10,0x10},
	{0x46,0x0b,0x37},
	{0x47,0x1d,0x05},
	{0x47,0x13,0x02},
	{0x47,0x1c,0xd0},
	{0x50,0x1f,0x00},
	{0x43,0x00,0x30},//32},
//-----------
	{0x34,0x06,0x00},
//---------------
	{0x30,0x02,0x5c},
	{0x56,0x82,0x05},
	{0x56,0x83,0x00},
	{0x56,0x86,0x03},
	{0x56,0x87,0xc0},
	{0x50,0x01,0x7f},
	{0x58,0x9b,0x04},
	{0x58,0x9a,0xc5},
	{0x44,0x07,0x04},
	{0x30,0x02,0x5c},
	{0x46,0x0c,0x22},
	{0x38,0x15,0x03},
	{0x30,0x00,0x00},
	{0x38,0x19,0x80},
	{0x35,0x03,0x00},
};      
        
static struct ov5642_regval_list ov5642_vga_regs[] = { //VGA:  640*480
	
};      
        
        
/*      
 * The white balance settings
 * Here only tune the R G B channel gain. 
 * The white balance enalbe bit is modified in sensor_s_autowb and sensor_s_wb
 */     
static struct ov5642_regval_list ov5642_auto_regs[] = {
	//simple awb
//	{0x34, 0x06, 0x00},
//	{0x51, 0x83, 0x94},
//	{0x51, 0x91, 0xff},
//	{0x51, 0x92, 0x00},
        
    //advanced  awb
	{0x34,0x06, 0x00},
	{0x51,0x92, 0x04},
	{0x51,0x91, 0xf8},
	{0x51,0x93, 0x70},
	{0x51,0x94, 0xf0},
	{0x51,0x95, 0xf0},
	{0x51,0x8d, 0x3d},
	{0x51,0x8f, 0x54},
	{0x51,0x8e, 0x3d},
	{0x51,0x90, 0x54},
	{0x51,0x8b, 0xa8},
	{0x51,0x8c, 0xa8},
	{0x51,0x87, 0x18},
	{0x51,0x88, 0x18},
	{0x51,0x89, 0x6e},
	{0x51,0x8a, 0x68},
	{0x51,0x86, 0x1c},
	{0x51,0x81, 0x50},
	{0x51,0x84, 0x25},
	{0x51,0x82, 0x11},
	{0x51,0x83, 0x14},
	{0x51,0x84, 0x25},
	{0x51,0x85, 0x24},
};      
        
static struct ov5642_regval_list ov5642_sunny_regs[] = {
	//tai yang guang
	{0x34,0x06, 0x01},
	{0x34,0x00, 0x06},
	{0x34,0x01, 0x1c},
	{0x34,0x02, 0x04},
	{0x34,0x03, 0x00},
	{0x34,0x04, 0x04},
	{0x34,0x05, 0xf3},
};      
        
static struct ov5642_regval_list ov5642_cloudy_regs[] = {	
	{0x34,0x06, 0x01},
	{0x34,0x00, 0x06},
	{0x34,0x01, 0x48},
	{0x34,0x02, 0x04},
	{0x34,0x03, 0x00},
	{0x34,0x04, 0x04},
	{0x34,0x05, 0xd3},
};      
        
static struct ov5642_regval_list ov5642_fluorescent_regs[] = {
	//ri guang deng
	{0x34,0x06, 0x01},
	{0x34,0x00, 0x05},
	{0x34,0x01, 0x48},
	{0x34,0x02, 0x04},
	{0x34,0x03, 0x00},
	{0x34,0x04, 0x07},
	{0x34,0x05, 0xcf},
};      
        
static struct ov5642_regval_list ov5642_incandescence_regs[] = {
	//bai ci deng 
	{0x34,0x06, 0x01},
	{0x34,0x00, 0x04},
	{0x34,0x01, 0x10},
	{0x34,0x02, 0x04},
	{0x34,0x03, 0x00},
	{0x34,0x04, 0x08},
	{0x34,0x05, 0xb6},
};


/*
 * The special effect settings
 */
static struct ov5642_regval_list ov5642_normal_regs[] = {
	{0x50,0x01, 0x7f},
	{0x55,0x80, 0x04},
};

static struct ov5642_regval_list ov5642_bw_regs[] = {
	{0x50,0x01, 0xff},
	{0x55,0x80, 0x18},
	{0x55,0x83, 0x80},
	{0x55,0x84, 0x80},
};

static struct ov5642_regval_list ov5642_sepia_regs[] = {
	{0x50,0x01, 0xff},
	{0x55,0x80, 0x18},
	{0x55,0x83, 0x40},
	{0x55,0x84, 0xa0},
};

static struct ov5642_regval_list ov5642_negative_regs[] = {
	{0x50,0x01, 0xff},
	{0x55,0x80, 0x40},
};

static struct ov5642_regval_list ov5642_emboss_regs[] = {
	{0x50,0x01, 0xff},
	{0x55,0x80, 0x18},
	{0x55,0x83, 0x80},
	{0x55,0x84, 0xc0},
};

static struct ov5642_regval_list ov5642_sketch_regs[] = {
	{0x50,0x01, 0xff},
	{0x55,0x80, 0x18},
	{0x55,0x83, 0x80},
	{0x55,0x84, 0xc0},
};

static struct ov5642_regval_list ov5642_sky_blue_regs[] = {
	{0x50,0x01, 0xff},
	{0x55,0x80, 0x18},
	{0x55,0x83, 0xa0},
	{0x55,0x84, 0x40},
};

static struct ov5642_regval_list ov5642_grass_green_regs[] = {
	{0x50,0x01, 0xff},
	{0x55,0x80, 0x18},
	{0x55,0x83, 0x60},
	{0x55,0x84, 0x60},
};

/*
 * The exposure target settings
 */
static struct ov5642_regval_list ov5642_ev_neg4_regs[] = {
	{0x3a,0x0f, 0x10},	//-1.7EV
	{0x3a,0x10, 0x08},
	{0x3a,0x1b, 0x10},
	{0x3a,0x1e, 0x08},
	{0x3a,0x11, 0x20},
	{0x3a,0x1f, 0x10},
};

static struct ov5642_regval_list ov5642_ev_neg3_regs[] = {
	{0x3a,0x0f, 0x18},	//-1.3EV
	{0x3a,0x10, 0x10},
	{0x3a,0x1b, 0x18},
	{0x3a,0x1e, 0x10},
	{0x3a,0x11, 0x30},
	{0x3a,0x1f, 0x10},
};

static struct ov5642_regval_list ov5642_ev_neg2_regs[] = {
	{0x3a,0x0f, 0x20},	//-1.0EV
	{0x3a,0x10, 0x18},
	{0x3a,0x11, 0x41},
	{0x3a,0x1b, 0x20},
	{0x3a,0x1e, 0x18},
	{0x3a,0x1f, 0x10},
};

static struct ov5642_regval_list ov5642_ev_neg1_regs[] = {
	{0x3a,0x0f, 0x28},	//-0.7EV
	{0x3a,0x10, 0x20},
	{0x3a,0x11, 0x51},
	{0x3a,0x1b, 0x28},
	{0x3a,0x1e, 0x20},
	{0x3a,0x1f, 0x10},
};                   

static struct ov5642_regval_list ov5642_ev_zero_regs[] = {
	{0x3a,0x0f, 0x38},		//default
	{0x3a,0x10, 0x30},
	{0x3a,0x11, 0x61},
	{0x3a,0x1b, 0x38},
	{0x3a,0x1e, 0x30},
	{0x3a,0x1f, 0x10},
};

static struct ov5642_regval_list ov5642_ev_pos1_regs[] = {
	{0x3a,0x0f, 0x48},	//0.7EV
	{0x3a,0x10, 0x40},
	{0x3a,0x11, 0x80},
	{0x3a,0x1b, 0x48},
	{0x3a,0x1e, 0x40},
	{0x3a,0x1f, 0x20},
};

static struct ov5642_regval_list ov5642_ev_pos2_regs[] = {
	{0x3a,0x0f, 0x50},	//1.0EV
	{0x3a,0x10, 0x48},
	{0x3a,0x11, 0x90},
	{0x3a,0x1b, 0x50},
	{0x3a,0x1e, 0x48},
	{0x3a,0x1f, 0x20},
};

static struct ov5642_regval_list ov5642_ev_pos3_regs[] = {
	{0x3a,0x0f, 0x58},	//1.3EV
	{0x3a,0x10, 0x50},
	{0x3a,0x11, 0x91},
	{0x3a,0x1b, 0x58},
	{0x3a,0x1e, 0x50},
	{0x3a,0x1f, 0x20},
};

static struct ov5642_regval_list ov5642_ev_pos4_regs[] = {
	{0x3a,0x0f, 0x60},	//1.7EV
	{0x3a,0x10, 0x58},
	{0x3a,0x11, 0xa0},
	{0x3a,0x1b, 0x60},
	{0x3a,0x1e, 0x58},
	{0x3a,0x1f, 0x20},	
};

