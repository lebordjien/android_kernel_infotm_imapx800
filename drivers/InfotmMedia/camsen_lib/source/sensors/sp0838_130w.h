/*------------------------------------------------------------------------------
-- 	Copyright (c) 2009~2014 ShangHai Infotm Ltd all rights reserved. 		  --
-- 				   															  --
-- 	This program is free software; you can redistribute it and/or modify	  --
-- 	it under the terms of the GNU General Public License as published by	  --
-- 	the Free Software Foundation; either version 2 of the License, or		  --
-- 	(at your option) any later version.							              --
--------------------------------------------------------------------------------
--	RCSfile: sp0838_130w.h
--
--  Description :
--
--	Author:
--     Arsor Fu   <arsor.fu@infotmic.com.cn>
--
--------------------------------------------------------------------------------
-- Revision History: 
-------------------- 
-- v1.0.1	arsor@2012/05/07: first commit.
--
------------------------------------------------------------------------------*/

#define SP0838_I2C_ADDR                (0x30>>1)


static	struct sp0838_regval_list {
	IM_UINT8  reg;
	IM_UINT8  value;
};

static	struct sp0838_regval_list  sp0838_qvga_regs[] = {
	{0xfd, 0x00},
	{0x47, 0x00},
	{0x48, 0x00},
	{0x49, 0x01},
	{0x4a, 0xe0},
	{0x4b, 0x00},
	{0x4c, 0x00},
	{0x4d, 0x02},
	{0x4e, 0x80},	
//	{0x0e, 0x01},//	
	{0x31, 0x14},// subsample
};

static	struct sp0838_regval_list  sp0838_vga_regs[] = {
	{0xfd, 0x00},
	{0x47, 0x00},
	{0x48, 0x00},
	{0x49, 0x01},
	{0x4a, 0xe0},
	{0x4b, 0x00},
	{0x4c, 0x00},
	{0x4d, 0x02},
	{0x4e, 0x80},
	{0x31, 0x10},
};

static	struct sp0838_regval_list  sp0838_init_regs[] = 
{
	//[Sensor]
	{0xfd,0x00}, //P0
	{0x1B,0x02},
	//----- 20130227, chris add
	{0x1c,0x37},  //drive ability 
	//--------------
	{0x27,0xe8},
	{0x28,0x0B},
	{0x32,0x00},
	{0x22,0xc0},
	{0x26,0x10}, 
	{0x31,0x10},   //Upside/mirr/Pclk inv/sub
	{0x5f,0x11},   //Bayer order
	{0xfd,0x01},   //P1
	{0x25,0x1a},   //Awb start
	{0x26,0xfb}, 
	{0x28,0x75}, 
	{0x29,0x4e},

	{0xfd,0x00},   
	{0xe7,0x03}, 
	{0xe7,0x00}, 
	{0xfd,0x01},

	{0x31,0x60},//64
	{0x32,0x18},
	{0x4d,0xdc},
	{0x4e,0x53},
	{0x41,0x8c},
	{0x42,0x57},
	{0x55,0xff},
	{0x56,0x00},
	{0x59,0x82},
	{0x5a,0x00},
	{0x5d,0xff},
	{0x5e,0x6f},
	{0x57,0xff},
	{0x58,0x00},
	{0x5b,0xff},
	{0x5c,0xa8},
	{0x5f,0x75},
	{0x60,0x00},
	{0x2d,0x00},
	{0x2e,0x00},
	{0x2f,0x00},
	{0x30,0x00},
	{0x33,0x00},
	{0x34,0x00},
	{0x37,0x00},
	{0x38,0x00},  //awb end
	{0xfd,0x00},  //P0
	{0x33,0x6f},  //LSC BPC EN
	{0x51,0x3f},  //BPC debug start
	{0x52,0x09},  
	{0x53,0x00},  
	{0x54,0x00},
	{0x55,0x10},  //BPC debug end
	{0x4f,0x08},  //blueedge
	{0x50,0x08},
	{0x57,0x10},  //Raw filter debut start
	{0x58,0x10},
	{0x59,0x10},
	{0x56,0x70},
	{0x5a,0x02},
	{0x5b,0x02},
	{0x5c,0x20},  //Raw filter debut end 
	{0x65,0x03},  //Sharpness debug start
	{0x66,0x01},
	{0x67,0x03},
	{0x68,0x46},
	{0x69,0x7f},
	{0x6a,0x01},
	{0x6b,0x04},
	{0x6c,0x01},
	{0x6d,0x03},  //Edge gain normal
	{0x6e,0x46},  //Edge gain normal
	{0x6f,0x7f},
	{0x70,0x01},
	{0x71,0x05},  //锐化阈值           
	{0x72,0x01},  //弱轮廓阈值         
	{0x73,0x03},  //边缘正向增益值     
	{0x74,0x46},  //边缘反向增益值     
	{0x75,0x7f},  //使能位             
	{0x76,0x01},  //Sharpness debug end
	{0xcb,0x07},  //HEQ&Saturation debug start 
	{0xcc,0x04},
	{0xce,0xff},
	{0xcf,0x10},
	{0xd0,0x20},
	{0xd1,0x00},
	{0xd2,0x1c},
	{0xd3,0x16},
	{0xd4,0x00},
	{0xd6,0x1c},
	{0xd7,0x16},
	{0xdd,0x70},  //Contrast
	{0xde,0x90},  //HEQ&Saturation debug end
	{0x7f,0xd7},  //Color Correction start
	{0x80,0xbc},                          
	{0x81,0xed},                          
	{0x82,0xd7},                          
	{0x83,0xd4},                          
	{0x84,0xd6},                          
	{0x85,0xff},                          
	{0x86,0x89},                          
	{0x87,0xf8},                          
	{0x88,0x3c},                          
	{0x89,0x33},                          
	{0x8a,0x0f},  //Color Correction end 
	{0x8b,0x00},  //gamma start
	{0x8c,0x1a},               
	{0x8d,0x29},               
	{0x8e,0x41},               
	{0x8f,0x62},               
	{0x90,0x7c},               
	{0x91,0x90},               
	{0x92,0xa2},               
	{0x93,0xaf},               
	{0x94,0xbc},               
	{0x95,0xc5},               
	{0x96,0xcd},               
	{0x97,0xd5},               
	{0x98,0xdd},               
	{0x99,0xe5},               
	{0x9a,0xed},               
	{0x9b,0xf5},               
	{0xfd,0x01},  //P1         
	{0x8d,0xfd},               
	{0x8e,0xff},  //gamma end  
	{0xfd,0x00},  //P0
	{0xca,0xcf},
	{0xd8,0x48},  //UV outdoor
	{0xd9,0x48},  //UV indoor 
	{0xda,0x48},  //UV dummy
	{0xdb,0x48},  //UV lowlight
	{0xb9,0x00},  //Ygamma start
	{0xba,0x04},
	{0xbb,0x08},
	{0xbc,0x10},
	{0xbd,0x20},
	{0xbe,0x30},
	{0xbf,0x40},
	{0xc0,0x50},
	{0xc1,0x60},
	{0xc2,0x70},
	{0xc3,0x80},
	{0xc4,0x90},
	{0xc5,0xA0},
	{0xc6,0xB0},
	{0xc7,0xC0},
	{0xc8,0xD0},
	{0xc9,0xE0},
	{0xfd,0x01},  //P1
	{0x89,0xf0},
	{0x8a,0xff},  //Ygamma end
	{0xfd,0x00},  //P0
	{0xe8,0x30},  //AEdebug start
	{0xe9,0x30},
	{0xea,0x40},  //Alc Window sel
	{0xf4,0x1b},  //outdoor mode sel
	{0xf5,0x80},
	{0xf7,0x78},  //AE target
	{0xf8,0x63},  
	{0xf9,0x68},  //AE target
	{0xfa,0x53},
	{0xfd,0x01},  //P1
	{0x09,0x31},  //AE Step 3.0
	{0x0a,0x85},
	{0x0b,0x0b},  //AE Step 3.0
	{0x14,0x20},
	{0x15,0x0f},
	//caprure preview daylight 24M 50hz 20-8FPS maxgain:0x70	
	{0xfd,0x00},
	{0x05,0x0 },
	{0x06,0x0 },
	{0x09,0x1 },
	{0x0a,0x76},
	{0xf0,0x62},
	{0xf1,0x0 },
	{0xf2,0x5f},
	{0xf5,0x78},
	{0xfd,0x01},
	{0x00,0xb2},
	{0x0f,0x60},
	{0x16,0x60},
	{0x17,0xa2},
	{0x18,0xaa},
	{0x1b,0x60},
	{0x1c,0xaa},
	{0xb4,0x20},
	{0xb5,0x3a},
	{0xb6,0x5e},
	{0xb9,0x40},
	{0xba,0x4f},
	{0xbb,0x47},
	{0xbc,0x45},
	{0xbd,0x43},
	{0xbe,0x42},
	{0xbf,0x42},
	{0xc0,0x42},
	{0xc1,0x41},
	{0xc2,0x41},
	{0xc3,0x41},
	{0xc4,0x41},
	{0xc5,0x70},
	{0xc6,0x41},
	{0xca,0x70},
	{0xcb,0xc },
	{0xfd,0x00},  //P0
	{0x32,0x15},  //Auto_mode set
	{0x34,0x66},  //Isp_mode set
	{0x35,0x40},  //out format
};
/************************* Special Effect *********************************/

static	struct sp0838_regval_list  sp0838_sepia_regs[] = {
	{0xfd, 0x00},
	{0x62, 0x20},
	{0x63, 0xc0},
	{0x64, 0x20},
};
/*
static	struct sp0838_regval_list  sp0838_bluish_regs[] = {
	{0xfd, 0x00},
	{0x62, 0x20},
	{0x63, 0x20},
	{0x64, 0xf0},
}; */

static	struct sp0838_regval_list  sp0838_greenish_regs[] = {
	{0xfd, 0x00},
	{0x62, 0x20},
	{0x63, 0x68},
	{0x64, 0x68},
};

static	struct sp0838_regval_list  sp0838_reddish_regs[] = {
	{0xfd, 0x00},
	{0x62, 0x20},
	{0x63, 0xb0},
	{0x64, 0x90},
}; 

static	struct sp0838_regval_list  sp0838_yellowish_regs[] = {
	{0xfd, 0x00},
	{0x62, 0x20},
	{0x63, 0xb0},
	{0x64, 0x00},
};

static	struct sp0838_regval_list  sp0838_bandw_regs[] = { //black & white
	{0xfd, 0x00},
	{0x62, 0x40},
	{0x63, 0x80},
	{0x64, 0x80},
};

static	struct sp0838_regval_list  sp0838_negative_regs[] = {
	{0xfd, 0x00}, // fu pian
	{0x62, 0x10}, 
	{0x63, 0x80},
	{0x64, 0x80},
};

static	struct sp0838_regval_list  sp0838_antique_regs[] = { 
	{0xfd, 0x00},
	{0x62, 0x20},   //fu gu
	{0x63, 0xc0},
	{0x64, 0x20},
};

static	struct sp0838_regval_list  sp0838_solarize_regs[] = {
	{0xfd, 0x00},
	{0x62, 0x00},
	{0x63, 0x80},
	{0x64, 0x80},
	{0xf7,0x98},  //AE target
	{0xf8,0x88},  
	{0xf9,0x88},  //AE target
	{0xfa,0x73},   //guo du bao guang 
};

static	struct sp0838_regval_list  sp0838_embossment_regs[] = {
	{0xfd, 0x00},
	{0x62, 0x02},   //fu diao  
	{0x63, 0x80},
	{0x64, 0x80},
};

static	struct sp0838_regval_list  sp0838_normal_regs[] = {
	{0xfd, 0x00},
	{0x62, 0x00},
	{0x63, 0x80},
	{0x64, 0x80},
};


static	struct sp0838_regval_list  sp0838_auto_regs[] = {
	{0xfd,0x01},                      
	{0x28,0x75},		                  
	{0x29,0x4e},                      
	{0xfd,0x00}, 
	{0x32,0x15},   
	{0xfd,0x00},  
};

static	struct sp0838_regval_list  sp0838_sunny_regs[] = {
	{0xfd,0x00}, 
	{0x32,0x05},           
	{0xfd,0x01},           
	{0x28,0x6b},	         
	{0x29,0x48},	         
	{0xfd,0x00},  
};

static	struct sp0838_regval_list  sp0838_cloudy_regs[] = {
	{0xfd,0x00}, 
	{0x32,0x05},          
	{0xfd,0x01},          
	{0x28,0x7f},	//0x71        
	{0x29,0x40},	//0x41        
	{0xfd,0x00},
};

static	struct sp0838_regval_list  sp0838_office_regs[] = {
	{0xfd,0x00},  // ri guang deng
	{0x32,0x05},                  
	{0xfd,0x01},                  
	{0x28,0x4f},	//0x5a	              
	{0x29,0x5f},	//0x62              
	{0xfd,0x00},
};

static	struct sp0838_regval_list  sp0838_home_regs[] = {
	{0xfd,0x00}, // wu si deng
	{0x32,0x05},       
	{0xfd,0x01},       
	{0x28,0x48},	//0x57     
	{0x29,0x65},	//0x66  
	{0xfd,0x00},     
};

static	struct sp0838_regval_list  sp0838_night_50hz_regs[] = 
{
	//caprure preview night 24M 50hz 20-6FPS maxgain:0x78                  
	{0xfd,0x00},
	{0x05,0x0 },
	{0x06,0x0 },
	{0x09,0x1 },
	{0x0a,0x76},
	{0xf0,0x62},
	{0xf1,0x0 },
	{0xf2,0x5f},
	{0xf5,0x78},
	{0xfd,0x01},
	{0x00,0xc0},
	{0x0f,0x60},
	{0x16,0x60},
	{0x17,0xa8},
	{0x18,0xb0},
	{0x1b,0x60},
	{0x1c,0xb0},
	{0xb4,0x20},
	{0xb5,0x3a},
	{0xb6,0x5e},
	{0xb9,0x40},
	{0xba,0x4f},
	{0xbb,0x47},
	{0xbc,0x45},
	{0xbd,0x43},
	{0xbe,0x42},
	{0xbf,0x42},
	{0xc0,0x42},
	{0xc1,0x41},
	{0xc2,0x41},
	{0xc3,0x41},
	{0xc4,0x41},
	{0xc5,0x41},
	{0xc6,0x41},
	{0xca,0x78},
	{0xcb,0x10},
	{0x14,0x20},
	{0x15,0x1f},
	{0xfd,0x00},
};

static	struct sp0838_regval_list  sp0838_night_60hz_regs[] = 
{
	//caprure preview night 24M 60hz 20-6FPS maxgain:0x78                  
	{0xfd,0x00},
	{0x05,0x0 },
	{0x06,0x0 },
	{0x09,0x1 },
	{0x0a,0x76},
	{0xf0,0x51},
	{0xf1,0x0 },
	{0xf2,0x5c},
	{0xf5,0x75},
	{0xfd,0x01},
	{0x00,0xc1},
	{0x0f,0x5d},
	{0x16,0x5d},
	{0x17,0xa9},
	{0x18,0xb1},
	{0x1b,0x5d},
	{0x1c,0xb1},
	{0xb4,0x21},
	{0xb5,0x3d},
	{0xb6,0x4d},
	{0xb9,0x40},
	{0xba,0x4f},
	{0xbb,0x47},
	{0xbc,0x45},
	{0xbd,0x43},
	{0xbe,0x42},
	{0xbf,0x42},
	{0xc0,0x42},
	{0xc1,0x41},
	{0xc2,0x41},
	{0xc3,0x41},
	{0xc4,0x41},
	{0xc5,0x41},
	{0xc6,0x41},
	{0xca,0x78},
	{0xcb,0x14},
	{0x14,0x20},
	{0x15,0x1f},
	{0xfd,0x00},
};


static	struct sp0838_regval_list  sp0838_sunset_50hz_regs[] = 
{
	//Superpix ronlus 24M 50HZ 8~20fps
	{0xfd,0x00},
	{0x05,0x0 },
	{0x06,0x0 },
	{0x09,0x1 },
	{0x0a,0x76},
	{0xf0,0x62},
	{0xf1,0x0 },
	{0xf2,0x5f},
	{0xf5,0x78},
	{0xfd,0x01},
	{0x00,0xb2},
	{0x0f,0x60},
	{0x16,0x60},
	{0x17,0xa2},
	{0x18,0xaa},
	{0x1b,0x60},
	{0x1c,0xaa},
	{0xb4,0x20},
	{0xb5,0x3a},
	{0xb6,0x5e},
	{0xb9,0x40},
	{0xba,0x4f},
	{0xbb,0x47},
	{0xbc,0x45},
	{0xbd,0x43},
	{0xbe,0x42},
	{0xbf,0x42},
	{0xc0,0x42},
	{0xc1,0x41},
	{0xc2,0x41},
	{0xc3,0x41},
	{0xc4,0x41},
	{0xc5,0x70},
	{0xc6,0x41},
	{0xca,0x70},
	{0xcb,0xc },
	{0x14,0x20},
	{0x15,0x0f},
	{0xfd,0x00},
};

static	struct sp0838_regval_list  sp0838_sunset_60hz_regs[] = 
{
	//Superpix ronlus 24M 60HZ 8~20fps
	{0xfd,0x00},
	{0x05,0x0 },
	{0x06,0x0 },
	{0x09,0x1 },
	{0x0a,0x76},
	{0xf0,0x51},
	{0xf1,0x0 },
	{0xf2,0x5c},
	{0xf5,0x75},
	{0xfd,0x01},
	{0x00,0xb4},
	{0x0f,0x5d},
	{0x16,0x5d},
	{0x17,0xa4},
	{0x18,0xac},
	{0x1b,0x5d},
	{0x1c,0xac},
	{0xb4,0x21},
	{0xb5,0x3d},
	{0xb6,0x4d},
	{0xb9,0x40},
	{0xba,0x4f},
	{0xbb,0x47},
	{0xbc,0x45},
	{0xbd,0x43},
	{0xbe,0x42},
	{0xbf,0x42},
	{0xc0,0x42},
	{0xc1,0x41},
	{0xc2,0x41},
	{0xc3,0x41},
	{0xc4,0x41},
	{0xc5,0x41},
	{0xc6,0x41},
	{0xca,0x70},
	{0xcb,0xf },
	{0x14,0x20},
	{0x15,0x0f},
	{0xfd,0x00},
};


static	struct sp0838_regval_list  sp0838_50hz_regs[] = 
{
	//caprure preview daylight 24M 50hz 20-8FPS maxgain:0x70	
	{0xfd,0x00},
	{0x05,0x0 },
	{0x06,0x0 },
	{0x09,0x1 },
	{0x0a,0x76},
	{0xf0,0x62},
	{0xf1,0x0 },
	{0xf2,0x5f},
	{0xf5,0x78},
	{0xfd,0x01},
	{0x00,0xb2},
	{0x0f,0x60},
	{0x16,0x60},
	{0x17,0xa2},
	{0x18,0xaa},
	{0x1b,0x60},
	{0x1c,0xaa},
	{0xb4,0x20},
	{0xb5,0x3a},
	{0xb6,0x5e},
	{0xb9,0x40},
	{0xba,0x4f},
	{0xbb,0x47},
	{0xbc,0x45},
	{0xbd,0x43},
	{0xbe,0x42},
	{0xbf,0x42},
	{0xc0,0x42},
	{0xc1,0x41},
	{0xc2,0x41},
	{0xc3,0x41},
	{0xc4,0x41},
	{0xc5,0x70},
	{0xc6,0x41},
	{0xca,0x70},
	{0xcb,0xc },
};


static	struct sp0838_regval_list  sp0838_60hz_regs[] = 
{
	//Superpix ronlus 24M 60HZ 8~20fps
	{0xfd,0x00},
	{0x05,0x0 },
	{0x06,0x0 },
	{0x09,0x1 },
	{0x0a,0x76},
	{0xf0,0x51},
	{0xf1,0x0 },
	{0xf2,0x5c},
	{0xf5,0x75},
	{0xfd,0x01},
	{0x00,0xb4},
	{0x0f,0x5d},
	{0x16,0x5d},
	{0x17,0xa4},
	{0x18,0xac},
	{0x1b,0x5d},
	{0x1c,0xac},
	{0xb4,0x21},
	{0xb5,0x3d},
	{0xb6,0x4d},
	{0xb9,0x40},
	{0xba,0x4f},
	{0xbb,0x47},
	{0xbc,0x45},
	{0xbd,0x43},
	{0xbe,0x42},
	{0xbf,0x42},
	{0xc0,0x42},
	{0xc1,0x41},
	{0xc2,0x41},
	{0xc3,0x41},
	{0xc4,0x41},
	{0xc5,0x41},
	{0xc6,0x41},
	{0xca,0x70},
	{0xcb,0xf },
};

static	struct sp0838_regval_list  sp0838_ev_neg4_regs[] = {
	{0xfd,0x00}, 
	{0xdc,0xc0}, 
};

static	struct sp0838_regval_list  sp0838_ev_neg3_regs[] = {
	{0xfd,0x00}, 
	{0xdc,0xd0}, 
};

static	struct sp0838_regval_list  sp0838_ev_neg2_regs[] = {
	{0xfd,0x00}, 
	{0xdc,0xe0}, 
};

static	struct sp0838_regval_list  sp0838_ev_neg1_regs[] = {
	{0xfd,0x00}, 
	{0xdc,0xf0}, 
};

static	struct sp0838_regval_list  sp0838_ev_zero_regs[] = {
	{0xfd,0x00}, 
	{0xdc,0x00}, 
};

static	struct sp0838_regval_list  sp0838_ev_pos1_regs[] = {
	{0xfd,0x00}, 
	{0xdc,0x10}, 
};

static	struct sp0838_regval_list  sp0838_ev_pos2_regs[] = {
	{0xfd,0x00}, 
	{0xdc,0x20}, 
};

static	struct sp0838_regval_list  sp0838_ev_pos3_regs[] = {
	{0xfd,0x00}, 
	{0xdc,0x30}, 
};

static	struct sp0838_regval_list  sp0838_ev_pos4_regs[] = {
	{0xfd,0x00}, 
	{0xdc,0x40}, 
};
