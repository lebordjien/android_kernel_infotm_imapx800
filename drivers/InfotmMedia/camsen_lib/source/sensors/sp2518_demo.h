/*------------------------------------------------------------------------------
-- 	Copyright (c) 2009~2014 ShangHai Infotm Ltd all rights reserved. 		  --
-- 				   															  --
-- 	This program is free software; you can redistribute it and/or modify	  --
-- 	it under the terms of the GNU General Public License as published by	  --
-- 	the Free Software Foundation; either version 2 of the License,or		  --
-- 	(at your option) any later version.							              --
--------------------------------------------------------------------------------
--	RCSfile: sp2518_demo.h
--
--  Description :
--
--	Author:
--     Arsor Fu   <arsor.fu@infotmic.com.cn>
--
--------------------------------------------------------------------------------
-- Revision History:
--------------------
-- v1.0.1	arsor@2012/08/23: first commit.
--
------------------------------------------------------------------------------*/
#define SP2518_I2C_ADDR                0x30
//AE target
#define  SP2518_P0_0xf7  0x70   //Ronlus 0x80//78
#define  SP2518_P0_0xf8  0x64   //0x74//6e
#define  SP2518_P0_0xf9  0x70   //0x80//74
#define  SP2518_P0_0xfa  0x64   //0x74//6a
//HEQ
#define  SP2518_P0_0xdd  0x78    //Ronlus 0x80
#define  SP2518_P0_0xde  0x98   //Ronlus 0x95//90
//sharpen
#define  SP2518_P1_0xe9  0x22   //0x20//0x30//14
#define  SP2518_P1_0xed  0x22   //0x20//0x30//10
//sat
#define  SP2518_P0_0xd4  0x70   //ROnlus 0x77
#define  SP2518_P0_0xd9  0x70  //0x77
//auto lum
#define SP2518_NORMAL_Y0ffset  0x10
#define SP2518_LOWLIGHT_Y0ffset  0x20
#define CLK24M_48M
// #define CLK24M_72M
//#define A_LIGHT_CORRECTION
static struct sp2518_regval_list {
	IM_UINT8  reg;
	IM_UINT8  value;
};
static struct sp2518_regval_list  sp2518_uxga_regs[] =
{
	//sca l e  1600*1200
	{0xfd,0x01},
	{0x0e,0x00},	//disable scale
	{0x0f,0x00},	//disable scale
	{0xfd,0x00},
	{0x2f,0x00},//PCLK 不分频
	{0xFF,0xFF},
};
static struct sp2518_regval_list  sp2518_svga_regs[] =
{
#if 0
	//  sca l e  800*600   2分频
	{0xfd,0x00},
	{0x4b,0x00},
	{0x4c,0x00},
	{0x47,0x00},
	{0x48,0x00},
	{0xfd,0x01},
	{0x0e,0x01},
	{0x0a,0x02},
	{0x0b,0x58},
	{0x0c,0x03},
	{0x0d,0x20},
	{0x08,0x00},
	{0x09,0x40},
	{0x06,0x00},
	{0x07,0x40},
#ifdef CLK24M_48M
	{0xfd,0x01},
	{0x0f,0x00},
	{0xfd,0x00},
	{0x2f,0x00},
#elif  defined(CLK24M_72M)
	{0xfd,0x01},
	{0x0f,0x01},
	{0xfd,0x00},
	{0x2f,0x08},//PCLK 2分频
#endif
	{0xfd,0x00},
	{0xFF,0xFF},
#endif
};
static struct sp2518_regval_list  sp2518_vga_regs[] =
{
	//sca l e  640*480	2分频
	{0xfd,0x00},
	{0x4b,0x00},
	{0x4c,0x00},
	{0x47,0x00},
	{0x48,0x00},
	{0x4d,0x06},
	{0x4e,0x40},
	{0x49,0x04},
	{0x4a,0xb0},
	{0xfd,0x01},
	{0x06,0x00},
	{0x07,0x50},
	{0x08,0x00},
	{0x09,0x50},
	{0x0a,0x01},
	{0x0b,0xe0},
	{0x0c,0x02},
	{0x0d,0x80},
	{0x0e,0x01},
#ifdef CLK24M_48M
	{0xfd,0x01},
	{0x0f,0x00},
	{0xfd,0x00},
	{0x2f,0x00},
#elif  defined(CLK24M_72M)
	{0xfd,0x01},
	{0x0f,0x01},
	{0xfd,0x00},
	{0x2f,0x08},//PCLK 2分频
#endif
	{0xfd,0x00},
	{0xFF,0xFF},
};
static struct sp2518_regval_list  sp2518_qvga_regs[] = {
};
static struct sp2518_regval_list  sp2518_init_regs[] =
{
	//SI50_SP2518 V1.0
	//24M in,48M out max fix 9fps
	{0xfd,0x00},
	{0x1b,0x1a},//maximum drv ability 0x02},
	{0x0e,0x01},
	{0x0f,0x2f},
	{0x10,0x2e},
	{0x11,0x00},
	{0x12,0x2f},//2//4f f
	{0x14,0x40},//20
	{0x16,0x02},
	{0x17,0x10},
	{0x1a,0x1f},//1e
	{0x1e,0x81},
	{0x21,0x00},//0x08 晃动发红问题
	{0x22,0x1b},//19  //防止照灯有红线
	{0x25,0x10},
	{0x26,0x25},
	{0x27,0x6d},//0x6d
	{0x2c,0x33},// 31 45
	{0x2d,0x75},
	{0x2e,0x38},//18 800*600行噪
	//{0x31,0x10}, //mirror upside down
	{0x44,0x03},
	{0x6f,0x00},
	{0xa0,0x04},
	{0x5f,0x01},
	{0x32,0x00},
	{0xfd,0x01},
	{0x2c,0x00},
	{0x2d,0x00},
	{0xfd,0x00},
	{0xfb,0x83},
	{0xf4,0x09},
	//Pregain
	{0xfd,0x01},
	{0xc6,0x90},
	{0xc7,0x90},
	{0xc8,0x90},
	{0xc9,0x90},
	//blacklevel
	{0xfd,0x00},
	{0x65,0x08},
	{0x66,0x08},
	{0x67,0x08},
	{0x68,0x08},
	//bpc
	{0x46,0xff},
	//rpc
	{0xfd,0x00},
	{0xe0,0x6c},
	{0xe1,0x54},
	{0xe2,0x48},
	{0xe3,0x40},
	{0xe4,0x40},
	{0xe5,0x3e},
	{0xe6,0x3e},
	{0xe8,0x3a},
	{0xe9,0x3a},
	{0xea,0x3a},
	{0xeb,0x38},
	{0xf5,0x38},
	{0xf6,0x38},
	{0xfd,0x01},
	{0x94,0xc0},//f8
	{0x95,0x38},
	{0x9c,0x6c},
	{0x9d,0x38},
#ifdef CLK24M_48M
	//AE  pll 48M  fix 9fps
	{0xfd,0x00},
	{0x30,0x04},//PLL 2倍频
	{0x03,0x02},
	{0x04,0xbe},
	{0x09,0x00},
	{0x0a,0x64},
	{0xf0,0x75},
	{0xf1,0x00},
	{0xfd,0x01},
	{0x90,0x0b},
	{0x92,0x01},
	{0x98,0x75},
	{0x99,0x00},
	{0x9a,0x01},
	{0x9b,0x00},
	// status
	{0xfd,0x01},
	{0xce,0x07},
	{0xcf,0x05},
	{0xd0,0x07},
	{0xd1,0x05},
	{0xd7,0x77},//exp_nr_outd_8lsb
	{0xd8,0x00},
	{0xd9,0x7b},//exp_outd_nr_8lsb
	{0xda,0x00},
	{0xfd,0x00},
	{0xfd,0x01},
	{0xca,0x30},//mean dummy2low
	{0xcb,0x50},//mean low2dummy
	{0xcc,0xc0},//rpc low
	{0xcd,0xc0},//rpc dummy
	{0xd5,0x80},//mean normal2dummy
	{0xd6,0x90},//mean dummy2normal
	{0xfd,0x00},
#elif  defined(CLK24M_72M)
	//AE  pll 72M  8-13fps
	{0xfd,0x00},
	{0x30,0x08},//PLL 3倍频
	{0x03,0xf6},
	{0x04,0xbe},
	{0x09,0x00},
	{0x0a,0x8b},
	{0xf0,0xa9},
	{0xf1,0x00},
	{0xfd,0x01},
	{0x90,0x0c},
	{0x92,0x01},
	{0x98,0xa9},
	{0x99,0x00},
	{0x9a,0x01},
	{0x9b,0x00},
	// status
	{0xfd,0x01},
	{0xce,0xec},
	{0xcf,0x07},
	{0xd0,0xec},
	{0xd1,0x07},
	{0xd7,0xab},//exp_nr_outd_8lsb
	{0xd8,0x00},
	{0xd9,0xaf},//exp_outd_nr_8lsb
	{0xda,0x00},
	{0xfd,0x00},
	{0xfd,0x01},
	{0xca,0x30},//mean dummy2low
	{0xcb,0x50},//mean low2dummy
	{0xcc,0xf8},//rpc low
	{0xcd,0xc0},//rpc dummy
	{0xd5,0x80},//mean normal2dummy
	{0xd6,0x90},//mean dummy2normal
	{0xfd,0x00},
#endif
	//lens shading for 舜泰979C-171A\181A
	{0xfd,0x00},
	{0xa1,0x20},
	{0xa2,0x20},
	{0xa3,0x20},
	{0xa4,0xff},
	{0xa5,0x80},
	{0xa6,0x80},
	{0xfd,0x01},
	{0x64,0x1e},//28
	{0x65,0x1c},//25
	{0x66,0x1c},//2a
	{0x67,0x16},//25
	{0x68,0x1c},//25
	{0x69,0x1c},//29
	{0x6a,0x1a},//28
	{0x6b,0x16},//20
	{0x6c,0x1a},//22
	{0x6d,0x1a},//22
	{0x6e,0x1a},//22
	{0x6f,0x16},//1c
	{0xb8,0x04},//0a
	{0xb9,0x13},//0a
	{0xba,0x00},//23
	{0xbb,0x03},//14
	{0xbc,0x03},//08
	{0xbd,0x11},//08
	{0xbe,0x00},//12
	{0xbf,0x02},//00
	{0xc0,0x04},//05
	{0xc1,0x0e},//05
	{0xc2,0x00},//18
	{0xc3,0x05},//08
	//raw filter
	{0xfd,0x01},
	{0xde,0x0f},
	{0xfd,0x00},
	{0x57,0x08},//raw_dif_thr
	{0x58,0x08},//a
	{0x56,0x08},//10
	{0x59,0x10},
	//R\B通道间平滑
	{0x5a,0xa0},//raw_rb_fac_outdoor
	{0xc4,0xa0},//60raw_rb_fac_indoor
	{0x43,0xa0},//40raw_rb_fac_dummy
	{0xad,0x40},//raw_rb_fac_low
	//Gr、Gb 通道内部平滑
	{0x4f,0xa0},//raw_gf_fac_outdoor
	{0xc3,0xa0},//60raw_gf_fac_indoor
	{0x3f,0xa0},//40raw_gf_fac_dummy
	{0x42,0x40},//raw_gf_fac_low
	{0xc2,0x15},
	//Gr、Gb通道间平滑
	{0xb6,0x80},//raw_gflt_fac_outdoor
	{0xb7,0x80},//60raw_gflt_fac_normal
	{0xb8,0x40},//40raw_gflt_fac_dummy
	{0xb9,0x20},//raw_gflt_fac_low
	//Gr、Gb通道阈值
	{0xfd,0x01},
	{0x50,0x0c},//raw_grgb_thr
	{0x51,0x0c},
	{0x52,0x10},
	{0x53,0x10},
	{0xfd,0x00},
	// awb1
	{0xfd,0x01},
	{0x11,0x10},
	{0x12,0x1f},
	{0x16,0x1c},
	{0x18,0x00},
	{0x19,0x00},
	{0x1b,0x96},
	{0x1a,0x9a},//95
	{0x1e,0x2f},
	{0x1f,0x29},
	{0x20,0xff},
	{0x22,0xff},
	{0x28,0xce},
	{0x29,0x8a},
	{0xfd,0x00},
	{0xe7,0x03},
	{0xe7,0x00},
	{0xfd,0x01},
	{0x2a,0xf0},
	{0x2b,0x10},
	{0x2e,0x04},
	{0x2f,0x18},
	{0x21,0x60},
	{0x23,0x60},
	{0x8b,0xab},
	{0x8f,0x12},
	//awb2
	{0xfd,0x01},
	{0x1a,0x80},
	{0x1b,0x80},
	{0x43,0x80},
	//outdoor
	{0x00,0xd4},
	{0x01,0xb0},
	{0x02,0x90},
	{0x03,0x78},
	//d65
	{0x35,0xd6},//
	{0x36,0xf0},//
	{0x37,0x7a},//8a
	{0x38,0x9a},//dc
	//indoor
	{0x39,0xab},
	{0x3a,0xca},
	{0x3b,0xa3},
	{0x3c,0xc1},
	//f
	{0x31,0x82},//7d
	{0x32,0xa5},//a0
	{0x33,0xd6},//d2
	{0x34,0xec},//e8
	//cwf
	{0x3d,0xa5},//a7
	{0x3e,0xc2},//be
	{0x3f,0xa7},//b3
	{0x40,0xc5},//c5
	//Color Correction
	{0xfd,0x01},
	{0x1c,0xc0},//add
	{0x1d,0x95},//add
#if 1
	{0xa0,0xa6},
	{0xa1,0xda},
	{0xa2,0x00},
	{0xa3,0x06},
	{0xa4,0xb2},
	{0xa5,0xc7},
	{0xa6,0x00},
	{0xa7,0xce},
	{0xa8,0xb2},
	{0xa9,0x0c},
	{0xaa,0x30},
	{0xab,0x0c},
#else
	{0xa0,0x80},//b8
	{0xa1,0x00},//d5
	{0xa2,0x00},//f2
	{0xa3,0xf6},//e8
	{0xa4,0x99},//95
	{0xa5,0xf2},//03
	{0xa6,0x0d},//f2
	{0xa7,0xda},//c4
	{0xa8,0x98},//ca
	{0xa9,0x00},//3c
	{0xaa,0x33},//03
	{0xab,0x0c},//0f
#endif
	{0xac,0xc0},//b8
	{0xad,0xc0},//d5
	{0xae,0x00},//f2
	{0xaf,0xf2},//e8
	{0xb0,0xa6},//95
	{0xb1,0xe8},//03
	{0xb2,0x00},//f2
	{0xb3,0xe7},//c4
	{0xb4,0x99},//ca
	{0xb5,0x0c},//3c
	{0xb6,0x33},//03
	{0xb7,0x0c},//0f
	//Saturation
	{0xfd,0x00},
	{0xbf,0x01},
	{0xbe,0xbb},
	{0xc0,0xb0},
	{0xc1,0xf0},
	{0xd3,0x77},
	{0xd4,SP2518_P0_0xd4},
	{0xd6,0x68},
	{0xd7,0x60},
	{0xd8,0x77},
	{0xd9,SP2518_P0_0xd9},
	{0xda,0x68},
	{0xdb,0x60},
	//uv_dif
	{0xfd,0x00},
	{0xf3,0x03},
	{0xb0,0x00},
	{0xb1,0x23},
	//gamma1 outdoor
	{0xfd,0x00},//0
	{0x8b,0x0 },//14
	{0x8c,0xa },//24
	{0x8d,0x13},//3a
	{0x8e,0x25},//59
	{0x8f,0x43},//6f
	{0x90,0x5d},//84
	{0x91,0x74},//95
	{0x92,0x88},//a3
	{0x93,0x9a},//b1
	{0x94,0xa9},//be
	{0x95,0xb5},//c7
	{0x96,0xc0},//d1
	{0x97,0xca},//d9
	{0x98,0xd4},//e1
	{0x99,0xdd},//e9
	{0x9a,0xe6},//f1
	{0x9b,0xef},//01
	{0xfd,0x01},//f9
	{0x8d,0xf7},//ff
	{0x8e,0xff},//
	//gamma2
	{0xfd,0x00},
	{0x78,0x0 },//0
	{0x79,0xa },//14
	{0x7a,0x13},//24
	{0x7b,0x25},//3a
	{0x7c,0x43},//59
	{0x7d,0x5d},//6f
	{0x7e,0x74},//84
	{0x7f,0x88},//95
	{0x80,0x9a},//a3
	{0x81,0xa9},//b1
	{0x82,0xb5},//be
	{0x83,0xc0},//c7
	{0x84,0xca},//d1
	{0x85,0xd4},//d9
	{0x86,0xdd},//e1
	{0x87,0xe6},//e9
	{0x88,0xef},//f1
	{0x89,0xf7},//f9
	{0x8a,0xff},//ff
	//gamma_ae
	{0xfd,0x01},
	{0x96,0x46},
	{0x97,0x14},
	{0x9f,0x06},
	/*//光斑过度好
	amma1
	{0xfd,0x00},
	{0x8b,0x00},
	{0x8c,0x14},
	{0x8d,0x24},
	{0x8e,0x3A},
	{0x8f,0x59},
	{0x90,0x70},
	{0x91,0x85},
	{0x92,0x96},
	{0x93,0xA6},
	{0x94,0xB3},
	{0x95,0xBE},
	{0x96,0xC9},
	{0x97,0xD2},
	{0x98,0xDB},
	{0x99,0xE3},
	{0x9a,0xEB},
	{0x9b,0xF2},
	{0xfd,0x01},
	{0x8d,0xF9},
	{0x8e,0xFF},
	amma2
	{0xfd,0x00},
	{0x78,0x00},
	{0x79,0x14},
	{0x7a,0x24},
	{0x7b,0x3A},
	{0x7c,0x59},
	{0x7d,0x70},
	{0x7e,0x85},
	{0x7f,0x96},
	{0x80,0xA6},
	{0x81,0xB3},
	{0x82,0xBE},
	{0x83,0xC9},
	{0x84,0xD2},
	{0x85,0xDB},
	{0x86,0xE3},
	{0x87,0xEB},
	{0x88,0xF2},
	{0x89,0xF9},
	{0x8a,0xFF},
	*/
	//HEQ
	{0xfd,0x00},
	{0xdd,SP2518_P0_0xdd},
	{0xde,SP2518_P0_0xde},
	{0xdf,0x80},
	//Ytarget
	{0xfd,0x00},
	{0xed,SP2518_P0_0xf7+0x04},
	{0xf7,SP2518_P0_0xf7},
	{0xf8,SP2518_P0_0xf8},
	{0xec,SP2518_P0_0xf8-0x04},
	{0xef,SP2518_P0_0xf9+0x04},
	{0xf9,SP2518_P0_0xf9},
	{0xfa,SP2518_P0_0xfa},
	{0xee,SP2518_P0_0xfa-0x04},
	//sharpen
	{0xfd,0x01},
	{0xdf,0x0f},
	{0xe5,0x10},
	{0xe7,0x10},
	{0xe8,0x22}, //18
	{0xec,0x22}, //18
	{0xe9,SP2518_P1_0xe9},
	{0xed,SP2518_P1_0xed},
	{0xea,0x10},
	{0xef,0x10},
	{0xeb,0x10},
	{0xf0,0x10},
	{0xfd,0x01},
	{0x70,0x76},
	{0x7b,0x40},
	{0x81,0x30},
	//Y_offset
	{0xfd,0x00},
	{0xb2,SP2518_NORMAL_Y0ffset},
	{0xb3,0x1f},
	{0xb4,0x30},
	{0xb5,0x50},
	//CNR
	{0xfd,0x00},
	{0x5b,0x20},
	{0x61,0x80},//20
	{0x77,0x80},//20//a0
	{0xca,0x80},//20
	//YNR
	{0xab,0x00},
	{0xac,0x02},
	{0xae,0x08},
	{0xaf,0x20},
	{0xfd,0x00},
	{0x31,0x00},//0x10},
	{0x32,0x0d},
	{0x33,0xcf},//ef
	{0x34,0x7f},//3f
	{0x35,0x40},
	//{0x1b,0x1a},//02
	//sca l e  1600*1200
	{0xfd,0x01},
	{0x0e,0x00},	//disable scale
	{0x0f,0x00},	//disable scale
	{0xfd,0x00},
	{0x2f,0x00},//PCLK 不分频
};
static struct sp2518_regval_list  sp2518_sepia_regs[] =
	{
#if 0
	{0xfd,0x00},
	{0x62,0x10},
	{0x63,0xb0},
	{0x64,0x40},
#endif
	};
static struct sp2518_regval_list  sp2518_bluish_regs[] =
	{
#if 0
		{0xfd,0x00},
	{0x62,0x10},
	{0x63,0x80},
	{0x64,0xb0},
#endif
	};
static struct sp2518_regval_list  sp2518_greenish_regs[] =
	{
#if 0
		{0xfd,0x00},
	{0x62,0x10},
	{0x63,0x50},
	{0x64,0x50},
#endif
	};
static struct sp2518_regval_list  sp2518_reddish_regs[] =
{
	//
};
static struct sp2518_regval_list  sp2518_yellowish_regs[] =
{
	//
};
static struct sp2518_regval_list  sp2518_bandw_regs[] =
	{
#if 0
		{0xfd,0x00},
	{0x62,0x20},
	{0x63,0x80},
	{0x64,0x80},
#endif
	};
static struct sp2518_regval_list  sp2518_negative_regs[] =
	{
#if 0
		{0xfd,0x00},
	{0x62,0x04},
	{0x63,0x80},
	{0x64,0x80},
#endif
	};
static struct sp2518_regval_list  sp2518_normal_regs[] =
	{
	{0xfd,0x00},
	{0x62,0x00},
	{0x63,0x80},
	{0x64,0x80},
	};
static struct sp2518_regval_list  sp2518_auto_regs[] =
	{
	{0xfd,0x01},
	{0x28,0xce},
	{0x29,0x8a},
	{0xfd,0x00},
	{0x32,0x0d},
	};
static struct sp2518_regval_list  sp2518_sunny_regs[] =
	{
		{0xfd,0x00},
	{0x32,0x05},
	{0xfd,0x01},
	{0x28,0xc1},
	{0x29,0x88},
	{0xfd,0x00},
	{0xe7,0x03},
	{0xe7,0x00},
	{0xfd,0x00},
	};
static struct sp2518_regval_list  sp2518_cloudy_regs[] =
	{
		{0xfd,0x00},
	{0x32,0x05},
	{0xfd,0x01},
	{0x28,0xe2},
	{0x29,0x82},
	{0xfd,0x00},
	{0xe7,0x03},
	{0xe7,0x00},
	{0xfd,0x00},
	};
static struct sp2518_regval_list  sp2518_office_regs[] =
	{
		{0xfd,0x00},
	{0x32,0x05},
	{0xfd,0x01},
	{0x28,0x7b},
	{0x29,0xd3},
	{0xfd,0x00},
	{0xe7,0x03},
	{0xe7,0x00},
	{0xfd,0x00},
	};
static struct sp2518_regval_list  sp2518_home_regs[] =
{
	{0xfd,0x00},
	{0x32,0x05},
	{0xfd,0x01},
	{0x28,0xae},
	{0x29,0xcc},
	{0xfd,0x00},
	{0xe7,0x03},
	{0xe7,0x00},
	{0xfd,0x00},
};
static struct sp2518_regval_list  sp2518_sunset_regs[] =
{
	{0xfd,0x00},
	{0xb2,SP2518_NORMAL_Y0ffset},
	{0xb3,0x1f},
#ifdef CLK24M_48M
	//capture preview daylight 48M 50hz fix 9FPS maxgain
	{0xfd,0x00},
	{0x03,0x02},
	{0x04,0xbe},
	{0x09,0x00},
	{0x0a,0x64},
	{0xf0,0x75},
	{0xf1,0x00},
	{0xfd,0x01},
	{0x90,0x0b},
	{0x92,0x01},
	{0x98,0x75},
	{0x99,0x00},
	{0x9a,0x01},
	{0x9b,0x00},
	// status
	{0xfd,0x01},
	{0xce,0x07},
	{0xcf,0x05},
	{0xd0,0x07},
	{0xd1,0x05},
	{0xd7,0x77},//exp_nr_outd_8lsb
	{0xd8,0x00},
	{0xd9,0x7b},//exp_outd_nr_8lsb
	{0xda,0x00},
	{0xfd,0x00},
#elif  defined(CLK24M_72M)
	//capture preview daylight 72M 50hz 8-13FPS maxgain
	{0xfd , 0x00},
	{0x03 , 0xf6},
	{0x04 , 0xbe},
	{0x09 , 0x00},
	{0x0a , 0x8b},
	{0xf0 , 0xa9},
	{0xf1 , 0x00},
	{0xfd , 0x01},
	{0x90 , 0x0c},
	{0x92 , 0x01},
	{0x98 , 0xa9},
	{0x99 , 0x00},
	{0x9a , 0x01},
	{0x9b , 0x00},
	// status
	{0xfd , 0x01},
	{0xce , 0xec},
	{0xcf , 0x07},
	{0xd0 , 0xec},
	{0xd1 , 0x07},
	{0xd7 , 0xab},//exp_nr_outd_8lsb
	{0xd8 , 0x00},
	{0xd9 , 0xaf},//exp_outd_nr_8lsb
	{0xda , 0x00},
	{0xfd , 0x00},
#endif
};
static struct sp2518_regval_list  sp2518_night_regs[] =
{
	{0xfd,0x00},
	{0xb2,SP2518_LOWLIGHT_Y0ffset},
	{0xb3,0x1f},
#ifdef CLK24M_48M
	//capture preview night 48M 50hz fix 6FPS maxgain
	{0xfd,0x00},
	{0x03,0x01},
	{0x04,0xd4},
	{0x09,0x02},
	{0x0a,0x64},
	{0xf0,0x4e},
	{0xf1,0x00},
	{0xfd,0x01},
	{0x90,0x10},
	{0x92,0x01},
	{0x98,0x4e},
	{0x99,0x00},
	{0x9a,0x01},
	{0x9b,0x00},
	// status
	{0xfd,0x01},
	{0xce,0xe0},
	{0xcf,0x04},
	{0xd0,0xe0},
	{0xd1,0x04},
	{0xd7,0x50},//exp_nr_outd_8lsb
	{0xd8,0x00},
	{0xd9,0x54},//exp_outd_nr_8lsb
	{0xda,0x00},
	{0xfd,0x00},
#elif  defined(CLK24M_72M)
	//capture preview night 72M 50hz fix 6FPS maxgain
	{0xfd , 0x00},
	{0x03 , 0x01},
	{0x04 , 0xd4},
	{0x05 , 0x00},
	{0x06 , 0x00},
	{0x07 , 0x00},
	{0x08 , 0x00},
	{0x09 , 0x05},
	{0x0a , 0x66},
	{0xf0 , 0x4e},
	{0xf1 , 0x00},
	{0xfd , 0x01},
	{0x90 , 0x10},
	{0x92 , 0x01},
	{0x98 , 0x4e},
	{0x99 , 0x00},
	{0x9a , 0x01},
	{0x9b , 0x00},
	//Status
	{0xfd , 0x01},
	{0xce , 0xe0},
	{0xcf , 0x04},
	{0xd0 , 0xe0},
	{0xd1 , 0x04},
	{0xd7 , 0x50},
	{0xd8 , 0x00},
	{0xd9 , 0x54},
	{0xda , 0x00},
	{0xfd , 0x00},
#endif
};
static struct sp2518_regval_list  sp2518_50hz_regs[] =
{
#ifdef CLK24M_48M
	//capture preview daylight 48M 50hz fix 9FPS maxgain
	{0xfd,0x00},
	{0x03,0x02},
	{0x04,0xbe},
	{0x09,0x00},
	{0x0a,0x64},
	{0xf0,0x75},
	{0xf1,0x00},
	{0xfd,0x01},
	{0x90,0x0b},
	{0x92,0x01},
	{0x98,0x75},
	{0x99,0x00},
	{0x9a,0x01},
	{0x9b,0x00},
	// status
	{0xfd,0x01},
	{0xce,0x07},
	{0xcf,0x05},
	{0xd0,0x07},
	{0xd1,0x05},
	{0xd7,0x77},//exp_nr_outd_8lsb
	{0xd8,0x00},
	{0xd9,0x7b},//exp_outd_nr_8lsb
	{0xda,0x00},
	{0xfd,0x00},
#elif  defined(CLK24M_72M)
	//capture preview daylight 72M 50hz 8-13FPS maxgain
	{0xfd,0x00},
	{0x03,0xf6},
	{0x04,0xbe},
	{0x09,0x00},
	{0x0a,0x8b},
	{0xf0,0xa9},
	{0xf1,0x00},
	{0xfd,0x01},
	{0x90,0x0c},
	{0x92,0x01},
	{0x98,0xa9},
	{0x99,0x00},
	{0x9a,0x01},
	{0x9b,0x00},
	// status
	{0xfd,0x01},
	{0xce,0xec},
	{0xcf,0x07},
	{0xd0,0xec},
	{0xd1,0x07},
	{0xd7,0xab},//exp_nr_outd_8lsb
	{0xd8,0x00},
	{0xd9,0xaf},//exp_outd_nr_8lsb
	{0xda,0x00},
	{0xfd,0x00},
#endif
};
static struct sp2518_regval_list  sp2518_60hz_regs[] =
{
#ifdef CLK24M_48M
	//capture preview daylight 48M 60Hz fix 9FPS maxgain
	{0xfd,0x00},
	{0x03,0x02},
	{0x04,0x4c},
	{0x09,0x00},
	{0x0a,0x5e},
	{0xf0,0x62},
	{0xf1,0x00},
	{0xfd,0x01},
	{0x90,0x0d},
	{0x92,0x01},
	{0x98,0x62},
	{0x99,0x00},
	{0x9a,0x01},
	{0x9b,0x00},
	// status
	{0xfd,0x01},
	{0xce,0xfa},
	{0xcf,0x04},
	{0xd0,0xfa},
	{0xd1,0x04},
	{0xd7,0x64},//exp_nr_outd_8lsb
	{0xd8,0x00},
	{0xd9,0x68},//exp_outd_nr_8lsb
	{0xda,0x00},
	{0xfd,0x00},
#elif  defined(CLK24M_72M)
	//capture preview daylight 72M 60Hz 8-13FPS maxgain
	{0xfd,0x00},
	{0x03,0x03},
	{0x04,0x4e},
	{0x05,0x00},
	{0x06,0x00},
	{0x07,0x00},
	{0x08,0x00},
	{0x09,0x00},
	{0x0a,0x8a},
	{0xf0,0x8d},
	{0xf1,0x00},
	{0xfd,0x01},
	{0x90,0x0f},
	{0x92,0x01},
	{0x98,0x8d},
	{0x99,0x00},
	{0x9a,0x01},
	{0x9b,0x00},
	//Status
	{0xfd,0x01},
	{0xce,0x43},
	{0xcf,0x08},
	{0xd0,0x43},
	{0xd1,0x08},
	{0xd7,0x8f},
	{0xd8,0x00},
	{0xd9,0x90},
	{0xda,0x00},
	{0xfd,0x00},
#endif
};
static	struct sp2518_regval_list  sp2518_ev_neg4_regs[] =
	{
	{0xfd,0x00},
	{0xdc,0xc0},
	};
static	struct sp2518_regval_list  sp2518_ev_neg3_regs[] =
	{
	{0xfd,0x00},
	{0xdc,0xd0},
	};
static	struct sp2518_regval_list  sp2518_ev_neg2_regs[] =
	{
	{0xfd,0x00},
	{0xdc,0xe0},
	};
static	struct sp2518_regval_list  sp2518_ev_neg1_regs[] =
	{
	{0xfd,0x00},
	{0xdc,0xf0},
	};
static	struct sp2518_regval_list  sp2518_ev_zero_regs[] =
	{
	{0xfd,0x00},
	{0xdc,0x00},
	};
static	struct sp2518_regval_list  sp2518_ev_pos1_regs[] =
	{
	{0xfd,0x00},
	{0xdc,0x10},
	};
static	struct sp2518_regval_list  sp2518_ev_pos2_regs[] =
	{
	{0xfd,0x00},
	{0xdc,0x20},
	};
static	struct sp2518_regval_list  sp2518_ev_pos3_regs[] =
	{
	{0xfd,0x00},
	{0xdc,0x30},
	};
static	struct sp2518_regval_list  sp2518_ev_pos4_regs[] =
	{
	{0xfd,0x00},
	{0xdc,0x40},
	};

